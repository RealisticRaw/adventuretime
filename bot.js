const {VK} = require('vk-io'); 
const {Keyboard} = require('vk-io');
const vk = new VK(); 
const {updates, api, snippets} = vk; 
const fs = require('fs');
const { upload } = vk;
const request = require('request-promise');
const chalk = require('chalk');
const mobs = require('./mobs.json')
const base = require('./base.json')
const beseda = require('./beseda.json')
const duel = require('./duel.json')

vk.setOptions({ 
	token: "—Ç–æ–∫–µ–Ω", 
	apiMode: "parallel", 
	pollingGroupId: –∞–π–¥–∏ –≥—Ä—É–ø–ø—ã
});

const { createCanvas, loadImage } = require('canvas')
const canvas = createCanvas(800, 800)
const Canvas = require('canvas');
const ctx = canvas.getContext('2d')
const path = require('path')

function updateWidget() {
	var tops = []
	for(let i in base.p){
		if(base.p[i].rank < 20){
			tops.push({
				id: i,
				idvk: base.p[i].id,
				lvl: base.p[i].lvl
			});
		}
	}
	tops.sort(function(a, b) {
		if (b.lvl > a.lvl) return 1
		if (b.lvl < a.lvl) return -1
		return 0
	})

	var script = {
		title: `–õ—É—á—à–∏–µ –∏–≥—Ä–æ–∫–∏`,
		head: [
			{
				text: '–ù–∏–∫ –∏–≥—Ä–æ–∫–∞'
			},
			{
				text: '–ö–æ–∏–Ω—ã',
				align: 'right'
			},
			{
				text: '–£—Ä–æ–≤–µ–Ω—å',
				align: 'right'
			}
		],
		body: []
	}

	for (var g = 0; g < 5; g++) {
		if (tops.length > g) {
			let ups = g;
			ups += 1;
			if (g <= 8) ups = `${ups}`
			if (g == 9) ups = `10`
			script.body.push([
				{
					icon_id: `id${tops[g].idvk}`,
					text: `${base.p[tops[g].id].nick}`,
					url: `vk.com/id${tops[g].idvk}`
				},
				{
					text: `${utils.sp(base.p[tops[g].id].balance)}üí∞`
				},
				{
					text: `${utils.sp(tops[g].lvl)}–ª–≤–ª.`
				}
			])
		}
	}
	request.post({ 
		url: 'https://api.vk.com/method/appWidgets.update', 
		form: { 
			v: '5.103', 
			type: 'table', 
			code: `return ${JSON.stringify(script)};`, 
			access_token: '' // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω —Å —É—Ä–æ–≤–Ω–µ–º –¥–æ—Å—Ç—É–ø–∞ app_widgets 
	}},
	function(err, resp, body) {
	});
}

function nearhard(x, y, objectx, objecty, xobj, yobj, xobj1, yobj1) {
	let near = false
	x -= Number(objectx)
	y -= Number(objecty)
	if(x < xobj && x > xobj1) {
		if(y < yobj && y > yobj1) near = true
	}
	return near
}

function near(x, y, objectx, objecty) {
	let near = false
	x -= Number(objectx)
	y -= Number(objecty)
	if(x < 0) x = -x
	if(y < 0) y = -y
	if(x < 30 && y < 50) near = true
	return near
}

function rand(text) {
	let tts = Math.floor(text.length * Math.random())
	return text[tts]
}

setInterval(function(){ 
        fs.writeFileSync("./mobs.json", JSON.stringify(mobs, null, "\t")) 
}, 10000); // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

setInterval(function(){ 
        fs.writeFileSync("./beseda.json", JSON.stringify(beseda, null, "\t")) 
}, 10000); // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

setInterval(function(){ 
        fs.writeFileSync("./base.json", JSON.stringify(base, null, "\t")) 
}, 10000); // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

const rotateText = {
	0: "0‚É£",
	1: "1‚É£",
	2: "2‚É£",
	3: "3‚É£",
	4: "4‚É£",
	5: "5‚É£",
	6: "6‚É£",
	7: "7‚É£",
	8: "8‚É£",
	9: "9‚É£"
}

function nols(num) {
    if(num < 10) return('0' + num)
    if(num > 9) return(num)
}

function zapret(text) {
 	let text1 = text.toLowerCase();
 	let texts = 0;
 	let stat = false;
	var zaprets = /(–ø–∏–∑–¥–∞|–µ–±—É—Ç –≤ –∂–æ–ø—É|—Å–æ—Å–∫–∞|—Å–æ—Å–∫–∏|—Å–æ—Å—ë—Ç|–º–∞–º–∫–∞|–º–∞–º–∫–∏|–±—Ä–∞—Ç —Å —Å–µ—Å—Ç—Ä–æ–π|—Å–ø–µ—Ä–º–∞|–µ–±–∞–ª–∫–∞|–≤–∫ –±–æ —Ç |—Å–æ–≤–∞ –Ω–µ —Å–ø–∏—Ç|—Å–æ–≤–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–ø–∏—Ç|—Å –æ –≤ –∞ –Ω –µ —Å –ø –∏ —Ç|—Å–æ–≤–∞–Ω–∏–∫–æ–≥–¥–∞–Ω–µ—Å–ø–∏—Ç|—Å–æ–≤–∞ –Ω–µ —Å–ø–∏—Ç –Ω–∏–∫–æ–≥–¥–∞|–≤–∫–±–æ—Ç—Ä—É|vkvot ru|vkbotru|vkbot|v k b o t . r u|–≤ –∫ –±–æ—Ç|–ø–æ—Ä–Ω–æ|botvk|–±–æ—Ç–≤–∫|vkbot|–∫–±–æ—Ç|bot vk|—Ö–µ–Ω—Ç–∞–π|—Å–µ–∫—Å|–ø–∏–¥—Ä|—Ç—Ä–∞—Ö|–Ω–∞—Å–∏–ª–∏–µ|–∑–æ–æ—Ñ–∏–ª|–±–¥—Å–º|—Å–∏—Ä–∏—è|hentai|hentay|—Å–∏–Ω–∏–π –∫–∏—Ç|—Å–∞–º–æ—É–±–∏–π—Å—Ç–≤–æ|—Ç–µ—Ä—Ä–æ—Ä–∏—Å—Ç—ã|—Å–ª–∏–≤|—Ü–ø|cp|–º–∞–ª–µ–Ω—å–∫–∏–µ|–º–∞–ª–æ–ª–µ—Ç–∫–∏|—Å—É—á–∫–∏|—Ç—Ä–∞—Ö|–µ–±–ª—è|–∏–∑–Ω–∞—Å–∏–ª–æ–≤–∞–Ω–∏–µ|–±–ª—è—Ç—å|—Ö—É–π|–ø–æ—à–µ–ª –Ω–∞—Ö|—Ç–≤–∞—Ä—å|–º—Ä–∞–∑—å|—Å—É—á–∫–∞|–≥–∞–Ω–¥–æ–Ω|—É–µ–±–æ–∫|—à–ª—é—Ö|–ø–∞—Å–∫—É–¥–∞|–æ—Ä–≥–∞–∑–º|–¥–µ–≤—Å—Ç–≤–µ–Ω–Ω–∏—Ü—ã|—Ü–µ–ª–∫–∏|—Ä–∞—Å—Å–æ–≤–æ–µ|–º–µ–ª–∫–∏–µ|–º–∞–ª–æ–ª–µ—Ç–∫–∏|–Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–µ|–µ–±–ª—è|—Ö–µ–Ω—Ç–∞–π|sex|bdsm|ebl|trax|syka|shlux|–∏–Ω—Ü–µ—Å—Ç|iznas|–º–∞—Ç—å|–¥–æ–ª–±–∞–µ–±|–¥–æ–ª–±–∞—ë–±|—Ö—É–µ—Å–æ—Å|—Å—É—á–∫–∞|—Å—É–∫–∞|—Ç–≤–∞—Ä—å|–ø–µ–∑–¥—é–∫|—Ö—É–π|—à–ª—é—Ö|–±–æ–≥|—Å–∞—Ç–∞–Ω–∞|–º—Ä–∞–∑—å)/
	if (zaprets.test(text1) == true) { 
		texts = `üìó ‚ûæ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å.` 
		stat = true;
	}
	var filter1 = /(http(s)?:\/\/.)?(www\.)?[-a-z0-9@:%._\+~#=]{1,256}\.[a-z]{2,6}/
	var filter2 = /(?!http(s)?:\/\/)?(www\.)?[–∞-—è0-9-_.]{1,256}\.(—Ä—Ñ|—Å—Ä–±|–±–ª–æ–≥|–±–≥|—É–∫—Ä|—Ä—É—Å|“õ–∞–∑|ÿßŸÖÿßÿ±ÿßÿ™.|ŸÖÿµÿ±.|ÿßŸÑÿ≥ÿπŸàÿØŸäÿ©.)/ 
	if (filter1.test(text1) == true || filter2.test(text1) == true) { 
		texts = `üìó ‚ûæ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å.` 
		stat = true; 
	}
	return texts
 } 

function splitString(stringToSplit, separator) {
	var arrayOfStrings = stringToSplit.split(separator);
	return arrayOfStrings
}

const utils = { 
sp: (int) => { 
int = int.toString(); 
return int.split('').reverse().join('').match(/[0-9]{1,3}/g).join(',').split('').reverse().join(''); 
},
	random: (x, y) => {
		return y ? Math.round(Math.random() * (y - x)) + x : Math.round(Math.random() * x);
	},
pick: (array) => {
	return array[getRandomInRange(array.length - 1)];
}}

function getRandomInRange(min, max) { 
return Math.floor(Math.random() * (max - min + 1)) + min; 
}; //–§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —á–∏—Å–ª–∞

setInterval(function(){
	for(let i in base.p){
		base.p[i].online = 0
	}
}, 120000)

setInterval(function(){
	if(base.c.pig > 9) return
	base.c.mobid += 1
	base.c.pig += 1
	mobs.mob[base.c.mobid] = {
		pig: 'pig.png',
		pig1: 'pig1.png',
		type: 1,
		hp: 15,
		world: 0,
		x: getRandomInRange(756, 1950),
		y: getRandomInRange(832, 1164),
		cent: 0
	}
}, 20000)

setInterval(function(){
	if(base.c.pig === 0) return
	for(let i in mobs.mob){
		let random = getRandomInRange(1, 4)
		if(random == 1){
			let proverka = Number(mobs.mob[i].y-30)
			if(proverka > 390){
				mobs.mob[i].y = Number(proverka)
			}
		}
		if(random == 2){
			let proverka = Number(mobs.mob[i].y+30)
			if(proverka < 1900){
				mobs.mob[i].y = Number(proverka)
			}
		}
		if(random == 3){
			let proverka = Number(mobs.mob[i].x+30)
			if(proverka < 2035){
				mobs.mob[i].cent = 0
				mobs.mob[i].x = Number(proverka)
			}
		}
		if(random == 4){
			let proverka = Number(mobs.mob[i].x-30)
			if(proverka > 721){
				mobs.mob[i].cent = 1
				mobs.mob[i].x = Number(proverka)
			}
		}
	}
}, 21000)

setInterval(function(){
	if(base.c.trees < 10){
		let kordsx = [Number(getRandomInRange(1600, 2000)), Number(getRandomInRange(830, 1170))]
		let kordsy = [Number(getRandomInRange(550, 1070)), Number(getRandomInRange(550, 800))]
		let random = getRandomInRange(1, 2)
		base.c.treesid += Number(1)
		base.c.trees += 1
		if(random == 1){
			mobs.objects.tree[base.c.treesid] = {
				coordsx: Number(kordsx[0]),
				coordsy: Number(kordsy[0]),
				hp: 10,
				dead: 0,
				hpp: 0
			}
		}
		if(random == 2){
			mobs.objects.tree[base.c.treesid] = {
				coordsx: Number(kordsx[1]),
				coordsy: Number(kordsy[1]),
				hp: 10,
				dead: 0,
				hpp: 0
			}
		}
	}
}, 20000)

vk.updates.use(async (context, next) => {
	if(context.isOutbox) return
	if(context.isGroup) return
	if(context.senderId === undefined) return
	if(!base.i[context.senderId]){
		var ctxs 
		base.c.id += 1
		base.i[context.senderId] = {
			id: base.c.id
		}
		let users = await vk.api.users.get({
			user_id: context.senderId,
			fields: 'photo_50'
		})
		base.p[base.c.id] = {
			exp: 0,
			offr: 0,
			lvl: 1,
			worlds: 0,
			caseopen: 0,
			online: 1,
			balance: 0,
			rank: 0,
			gun: 0,
			duel: 0,
			duelhp: 12,
			rassilka: 0,
			photo_50: `${users[0].photo_50}`,
			lvl: 1,
			swordhp: 2,
			pickaxehp: 1,
			axehp: 2,
			inventory: {
				wood: 0,
				sword: 1,
				pickaxe: 1,
				axe: 1,
				pig: 0
			},
			world: {
				x: 1352,
				y: 687,
				xd: 0,
				yd: 0
			},
			id: context.senderId,
			cent: 0,
			nick: `${users[0].last_name}`
		}
		context.send({
		message: `–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –±–æ—Ç–µ, –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –ø–æ–¥–æ–π–¥–∏—Ç–µ –∫ "NPC –õ–∞—É—Ä–∞".\nhttps://vk.me/join/AJQ1d1CIKBYM72aC2iYOO708`,
		keyboard: Keyboard.keyboard([
			[
				Keyboard.textButton({
					label: `‚†Ä`,
					color: Keyboard.NEGATIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚¨Ü‚¨Ü‚¨Ü`,
					color: Keyboard.POSITIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚†Ä`,
					color: Keyboard.NEGATIVE_COLOR
				})
			],
			[
				Keyboard.textButton({
					label: `üî®`,
					color: Keyboard.NEGATIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚¨Ü`,
					color: Keyboard.POSITIVE_COLOR
				}),
				Keyboard.textButton({
					label: `–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å`,
					color: Keyboard.NEGATIVE_COLOR
				})
			],
			[
				Keyboard.textButton({
					label: `‚¨Ö‚¨Ö‚¨Ö`,
					color: Keyboard.POSITIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚¨Ö`,
					color: Keyboard.POSITIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚öî`
				}),
				Keyboard.textButton({
					label: `‚û°`,
					color: Keyboard.POSITIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚û°‚û°‚û°`,
					color: Keyboard.POSITIVE_COLOR
				})
			],
			[
				Keyboard.textButton({
					label: `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å`,
					color: Keyboard.NEGATIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚¨á`,
					color: Keyboard.POSITIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚†Ä`,
					color: Keyboard.NEGATIVE_COLOR
				})
			],
			[
				Keyboard.textButton({
					label: `‚†Ä`,
					color: Keyboard.NEGATIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚¨á‚¨á‚¨á`,
					color: Keyboard.POSITIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚†Ä`,
					color: Keyboard.NEGATIVE_COLOR
				})
			]
		])
	})
		base.p[base.i[context.senderId].id].online = Number(1)
		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(2773, 2235);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'pole.png';
	    ctx.drawImage(img, 0, 0) // (-433, -459)-83
		let xplayers = Number(base.p[base.i[context.senderId].id].world.x)
		let yplayers = Number(base.p[base.i[context.senderId].id].world.y)
	    for(let i in mobs.objects.tree){
	    	if(mobs.objects.tree[i].dead === 0){
				var img = new Image();
				img.src = 'tree.png';
	    		ctx.drawImage(img, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy)
	    	}
	    }
	    for(let i in base.p){
	    	if(base.p[i].online === 1){
	    	let x = base.p[i].world.x
	    	let y = base.p[i].world.y
	    	if(base.p[i].cent === 0) img.src = 'guard.png'
	    	if(base.p[i].cent === 1) img.src = 'guard1.png'
	    	ctx.drawImage(img, x, y)
	    	let xnick = base.p[i].world.x+17
	    	let ynick = base.p[i].world.y-5
	    	if(base.p[i].inventory.sword == 1){
		    	if(base.p[i].cent === 0) {
		    		x = Number(x+25)
		    		y = Number(y+2)
		    		img.src = 'woodps.png';
		    	}
		    	if(base.p[i].cent === 1) {
					x = Number(x-7)
		    		y = Number(y+3)
		    		img.src = 'woodps1.png';
		    	}
		    }
	    	ctx.drawImage(img, x, y)
	    	ctx.font = 'bold 13px sans';
	    	ctx.fillStyle = "#ffffff";
			ctx.textAlign = 'center';
			ctx.fillText(`${base.p[i].nick}`, xnick, ynick);
		}
	    }

	    	ctx.font = 'bold 15px canvas';
	    	ctx.fillStyle = "#ffec18";
			ctx.textAlign = 'center';
			ctx.fillText(`–õ–∞—É—Ä–∞`, 1297, 683);

	    var dataUrl = canvas.toDataURL();

	    img.src = `${dataUrl}`;

	    var canvass = createCanvas(700, 400);
		var ctxs = canvass.getContext('2d');

		xplayers = Math.floor(xplayers-330)
		xplayers = -xplayers

		yplayers = Math.floor(yplayers-178)
		yplayers = -yplayers

	    ctxs.drawImage(img, xplayers, yplayers)

		ctxs.font = '30px canvas';
	   	ctxs.fillStyle = "#751404";
		//ctx.textAlign = '';
		ctxs.fillText(`X: ${base.p[base.i[context.senderId].id].world.x}, Y: ${base.p[base.i[context.senderId].id].world.y}`, 518, 386);

		return context.sendPhotos(canvass.toBuffer())
	}
	if(base.p[base.i[context.senderId].id].exp > 199){
		base.p[base.i[context.senderId].id].exp -= 200
		base.p[base.i[context.senderId].id].lvl += 1
	}
	base.p[base.i[context.senderId].id].online = Number(1)
    await next();
});

setInterval(updateWidget, 30500);

updates.hear(/—Ä–∞—Å—Å—ã–ª–∫–∞/i, async (context) => {
	if(base.p[base.i[context.senderId].id].rassilka == 0) {
		base.p[base.i[context.senderId].id].rassilka = 1
		return context.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–∏–ª–∏ —Ä–∞—Å—Å—ã–ª–∫—É.`)
	}
	if(base.p[base.i[context.senderId].id].rassilka == 1) {
		base.p[base.i[context.senderId].id].rassilka = 0
		return context.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–∏–ª–∏ —Ä–∞—Å—Å—ã–ª–∫—É.`)
	}
})

updates.hear(/–ø–æ–º–æ—â—å|help|–∫–æ–º–∞–Ω–¥—ã/i, async (context) => {
	context.send(`–í—Å–µ –∫–æ–º–∞–Ω–¥—ã:
		—Å–∫–∞–∑–∞—Ç—å (—Ç–µ–∫—Å—Ç) - —Å–∫–∞–∑–∞—Ç—å —Ä—è–¥–æ–º —Å—Ç–æ—è—â–∏–º –∏–≥—Ä–æ–∫–∞–º —Ç–µ–∫—Å—Ç.
		–∫–Ω - –≤—ã–≤–µ—Å—Ç–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (–≤ –Ω–µ–π –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥)
		–ø—Ä–µ–¥–º–µ—Ç - –≤—ã–≤–µ–¥–µ—Ç —á—Ç–æ –º–æ–∂–Ω–æ –≤–∑—è—Ç—å.`)
})
updates.hear(/—Å–æ–∑–¥–∞—Ç—å–ø–µ—Ä–µ–º–µ–Ω–Ω—É—é–æ–±—ä–µ–∫—Ç (.*) (.*) (.*)/i, async (context) => {
	if(base.p[base.i[context.senderId].id].rank < 10) return
	for(let i in base.p){
		base.p[i][context.$match[1]][context.$match[2]] = Number(context.$match[3])
	}
	return context.send(`–≤—Å—ë`)
})

updates.hear(/—Å–æ–∑–¥–∞—Ç—å–ø–µ—Ä–µ–º–µ–Ω–Ω—É—é—á–∏—Å–ª–æ (.*) (.*)/i, async (context) => {
	if(base.p[base.i[context.senderId].id].rank < 10) return
	for(let i in base.p){
		base.p[i][context.$match[1]] = Number(context.$match[2])
	}
	return context.send(`–≤—Å—ë`)
})

updates.hear(/—Å–æ–∑–¥–∞—Ç—å–ø–µ—Ä–µ–º–µ–Ω–Ω—É—é—Å—Ç—Ä–æ–∫–∞ (.*) (.*)/i, async (context) => {
	if(base.bs[base.id[context.senderId].id].rank < 10) return
	for(let i in base.p){
		base.p[i][context.$match[1]] = `${context.$match[2]}`
	}
	return context.send(`–≤—Å—ë`)
})

updates.hear(/–∫–Ω|üëàüèª –û–±—Ä–∞—Ç–Ω–æ/i, async (context) => {
	return context.send({
		message: `>> –û—Ç–∫—Ä—ã–≤–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.`,
		//message: `‚õÑ –í—Å–µ –∫–æ–º–∞–Ω–¥—ã: \n>> —Å—Ç–∞—Ç—É—Å (–≤—Å–µ —Ç–µ–≥–∏)\n>> —Å—Ç–∞—Ç—É—Å "—Å—Ç–∞—Ç—É—Å" (—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å)\n >> —Å—Ç–∞—Ç—É—Å –≤–∫–ª (–≤—ã–∫–ª—é—á–∏—Ç—å/–≤–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-—Å—Ç–∞—Ç—É—Å)\n>> —Ä–∞–Ω–¥–æ–º (–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥—ã —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ä–∞–Ω–¥–æ–º —Å—Ç–∞—Ç—É—Å–æ–º)\n >> –æ—Ç–≤—è–∑–∞—Ç—å (–æ—Ç–≤—è–∑–∞—Ç—å —Ç–æ–∫–µ–Ω)`,
		//‚†Ä
		keyboard: Keyboard.keyboard([
			[
				Keyboard.textButton({
					label: `‚†Ä`,
					color: Keyboard.NEGATIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚¨Ü‚¨Ü‚¨Ü`,
					color: Keyboard.POSITIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚†Ä`,
					color: Keyboard.NEGATIVE_COLOR
				})
			],
			[
				Keyboard.textButton({
					label: `üî®`,
					color: Keyboard.NEGATIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚¨Ü`,
					color: Keyboard.POSITIVE_COLOR
				}),
				Keyboard.textButton({
					label: `–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å`,
					color: Keyboard.NEGATIVE_COLOR
				})
			],
			[
				Keyboard.textButton({
					label: `‚¨Ö‚¨Ö‚¨Ö`,
					color: Keyboard.POSITIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚¨Ö`,
					color: Keyboard.POSITIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚öî`
				}),
				Keyboard.textButton({
					label: `‚û°`,
					color: Keyboard.POSITIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚û°‚û°‚û°`,
					color: Keyboard.POSITIVE_COLOR
				})
			],
			[
				Keyboard.textButton({
					label: `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å`,
					color: Keyboard.NEGATIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚¨á`,
					color: Keyboard.POSITIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚†Ä`,
					color: Keyboard.NEGATIVE_COLOR
				})
			],
			[
				Keyboard.textButton({
					label: `‚†Ä`,
					color: Keyboard.NEGATIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚¨á‚¨á‚¨á`,
					color: Keyboard.POSITIVE_COLOR
				}),
				Keyboard.textButton({
					label: `‚†Ä`,
					color: Keyboard.NEGATIVE_COLOR
				})
			]
		])
	})	
})


updates.hear(/sendwall (.*) (.*)/i, async (context) => {
	if(base.p[base.i[context.senderId].id].rank < 10) return
	for(let i in base.p){
		if(base.p[i].rassilka == 0){
			vk.api.messages.send({
				user_id: base.p[i].id,
				message: `${context.$match[1]}`,
				attachment: `${context.$match[2]}`
			})
		}
	}
	return context.send(`—Ä–æ—Å—Å—ã–ª–∫–∞ —Å–¥–µ–ª–∞–Ω–∞`)
})

updates.hear(/üå≥ –î–µ—Ä–µ–≤–æ/i, async (context) => {
	if(base.p[base.i[context.senderId].id].worlds === 0){
		var xplayers = Number(base.p[base.i[context.senderId].id].world.x)
		var yplayers = Number(base.p[base.i[context.senderId].id].world.y)
		if(near(xplayers, yplayers, 1300, 710) === true){
			if(base.p[base.i[context.senderId].id].inventory.wood < 1) return context.send(`–£ –≤–∞—Å –Ω–µ—Ç –¥–µ—Ä–µ–≤–∞ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.`)
			let money = Math.floor(base.p[base.i[context.senderId].id].inventory.wood * 2)
			base.p[base.i[context.senderId].id].balance += Number(money)
			context.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ ${base.p[base.i[context.senderId].id].inventory.wood}—à—Ç. –¥–µ—Ä–µ–≤–∞, –∏ –ø–æ–ª—É—á–∏–ª–∏ ${money} –∫–æ–∏–Ω–æ–≤.`)
			base.p[base.i[context.senderId].id].inventory.wood = 0
		} else {
			return context.send(`–î–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–¥ –æ—Å–æ–±—ã–º–∏ NPC.`)
		}
	}
})

updates.hear(/ü•© –°–≤–∏–Ω–∏–Ω–∞/i, async (context) => {
	if(base.p[base.i[context.senderId].id].worlds === 0){
		var xplayers = Number(base.p[base.i[context.senderId].id].world.x)
		var yplayers = Number(base.p[base.i[context.senderId].id].world.y)
		if(near(xplayers, yplayers, 1300, 710) === true){
			if(base.p[base.i[context.senderId].id].inventory.pig < 1) return context.send(`–£ –≤–∞—Å –Ω–µ—Ç —Å–≤–∏–Ω–∏–Ω—ã –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.`)
			let money = Math.floor(base.p[base.i[context.senderId].id].inventory.pig * 4)
			base.p[base.i[context.senderId].id].balance += Number(money)
			context.send(`–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ ${base.p[base.i[context.senderId].id].inventory.pig}—à—Ç. —Å–≤–∏–Ω–∏–Ω—ã, –∏ –ø–æ–ª—É—á–∏–ª–∏ ${money} –∫–æ–∏–Ω–æ–≤.`)
			base.p[base.i[context.senderId].id].inventory.pig = 0
		} else {
			return context.send(`–î–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–¥ –æ—Å–æ–±—ã–º–∏ NPC.`)
		}
	}
})

updates.hear(/‚ò† –ü—É—Å—Ç–æ/i, async (context) => {
	context.send(`–ü—É—Å—Ç–æ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ :(`)
})

updates.hear(/üõí –ü—Ä–æ–¥–∞–∂–∞/i, async (context) => {
	if(base.p[base.i[context.senderId].id].worlds === 0){
		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(2773, 2235);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'pole.png';
		ctx.drawImage(img, 0, 0)
		let xplayers = Number(base.p[base.i[context.senderId].id].world.x)
		let yplayers = Number(base.p[base.i[context.senderId].id].world.y)
		if(near(xplayers, yplayers, 1300, 710) === true){
			let mass = []
				if(base.p[base.i[context.senderId].id].inventory.wood > 0){
					mass.push([
						Keyboard.textButton({
							label: `üå≥ –î–µ—Ä–µ–≤–æ`,
							payload: {
								"command": "tipidar"
							}
						})
					])
				}
				if(base.p[base.i[context.senderId].id].inventory.pig > 0){
					mass.push([
						Keyboard.textButton({
							label: `ü•© –°–≤–∏–Ω–∏–Ω–∞`,
							payload: {
								"command": "tipidar–∫—Ä—É—Ç–æ–π"
							}
						})
					])
				}
				if(mass.length == 0){
					mass.push([
						Keyboard.textButton({
							label: `‚ò† –ü—É—Å—Ç–æ`
						})
					])
				}
				context.send({
					message: `–£–∫–∞–∂–∏—Ç–µ —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å. [INLINE –ö–Ω–æ–ø–∫–∏]
					–ï—Å–ª–∏ –≤—ã —Å–∏–¥–∏—Ç–µ —Å –ü–ö —Ç–æ –∏–≥—Ä–∞–π—Ç–µ —Å —Å–∞–π—Ç–∞: m.vk.com`,
					attachment: 'photo-189875029_457239021',
					keyboard: Keyboard.keyboard(mass).inline(true)
				})
		} else {
			return context.send(`–î–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–¥ –æ—Å–æ–±—ã–º–∏ NPC.`)
		}
	}
})

updates.hear(/–ø—Ä–æ—Ñ–∏–ª—å/i, async (context) => {
	return context.send(`
		*id${context.senderId} (${base.p[base.i[context.senderId].id].nick}), –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:
		–õ–í–õ: ${base.p[base.i[context.senderId].id].lvl}
		–û–ü–´–¢: ${base.p[base.i[context.senderId].id].exp}/200
	`)
})

updates.hear(/üìã –ö–≤–µ—Å—Ç—ã/i, async (context) => {
	context.send(`–ü–æ–∫–∞-—á—Ç–æ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ :(`)
})

updates.hear(/‚öî/i, async (context) => {
	if(base.p[base.i[context.senderId].id].worlds == 0){
		if(base.p[base.i[context.senderId].id].gun === 1){
			const { registerFont, createCanvas, loadImage } = require('canvas');
			registerFont('canvas.ttf', { family: 'canvas' })
			var canvas = createCanvas(2773, 2235);
			var ctx = canvas.getContext('2d');
			var Image = Canvas.Image;
			var img = new Image();
			img.src = 'pole.png';
		    ctx.drawImage(img, 0, 0) // (-433, -459)-83
			let xplayers = Number(base.p[base.i[context.senderId].id].world.x)
				let yplayers = Number(base.p[base.i[context.senderId].id].world.y)
				let playernear = ``
			for(let i in mobs.mob){
				if(mobs.mob[i].world === 0){
					if(nearhard(xplayers, yplayers, mobs.mob[i].x, mobs.mob[i].y, 35, 35, -25, -35) == true){
						playernear = `${i}`
					}
				}
			}

			console.log(mobs.mob[playernear])

			if(mobs.mob[playernear]){
				if(mobs.mob[playernear].type == 1){
					console.log(base.p[base.i[context.senderId].id])
					mobs.mob[playernear].hp -= Number(base.p[base.i[context.senderId].id].swordhp)
					if(mobs.mob[playernear].hp < 1) {
						delete mobs.mob[playernear]
						base.c.pig -= 1
						let exp = Number(getRandomInRange(3, 7))
						let eat = Number(getRandomInRange(1, 3))
						base.p[base.i[context.senderId].id].exp += Number(exp)
						base.p[base.i[context.senderId].id].inventory.pig += Number(eat)
						context.send(`–í—ã —É–±–∏–ª–∏ —Å–≤–∏–Ω—å—é.\n–í—ã –ø–æ–ª—É—á–∏–ª–∏: ${exp}–æ–ø. , ${eat}—Å–≤.`)
					} else{
						context.send(`–í—ã —É–¥–∞—Ä–∏–ª–∏ —Å–≤–∏–Ω—å—é.\n–•–ü —Å–≤–∏–Ω—å–∏: ${mobs.mob[playernear].hp}`)
					}
				}
			} else {
				let nearplayers = 0
				for(let i in base.p){
	    			if(base.p[i].online === 1){
				    	let x = base.p[i].world.x
				    	let y = base.p[i].world.y
						if(nearhard(xplayers, yplayers, base.p[i].world.x, base.p[i].world.y, 35, 35, -35, -35) === true){
							if(i != base.i[context.senderId].id){
								nearplayers = Number(i)
							}
						}
					}
				}
				if(nearplayers == 0) {
					context.send(`–ù–µ –Ω–∞–π–¥–µ–Ω –æ–±—ä–µ–∫—Ç –¥–ª—è –∞—Ç—Ç–∞–∫–∏.`)
				} else {
					context.send(`–ù–∞ –¥–∞–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏ –Ω–µ–ª—å–∑—è –∞—Ç—Ç–∞–∫–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–æ–≤.`)
				}
			}


			for(let i in mobs.objects.tree){
		    	if(mobs.objects.tree[i].dead === 0){
					var img = new Image();
					img.src = 'tree.png';
		    		ctx.drawImage(img, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy)
		    	}
		    }

		    for(let i in mobs.mob){
			    	if(mobs.mob[i].type === 1){
			    		if(mobs.mob[i].cent === 0){
			    			img.src = `${mobs.mob[i].pig}`
			    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
			    		}
						if(mobs.mob[i].cent === 1){
			    			img.src = `${mobs.mob[i].pig1}`
			    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
			    		}
			    	}
			    }

		    for(let i in base.p){
		    	if(base.p[i].online === 1){
			    	let x = base.p[i].world.x
			    	let y = base.p[i].world.y
			    	if(base.p[i].cent === 0) img.src = 'guard.png'
			    	if(base.p[i].cent === 1) img.src = 'guard1.png'
			    	ctx.drawImage(img, x, y)
			    	let xnick = base.p[i].world.x+17
			    	let ynick = base.p[i].world.y-5
			    	if(base.p[i].gun == 1){
			    	if(base.p[i].inventory.sword == 1){
				    	if(base.p[i].cent === 0) {
				    		x = Number(x+25)
				    		y = Number(y+2)
				    		img.src = 'woodps.png';
				    	}
				    	if(base.p[i].cent === 1) {
							x = Number(x-7)
				    		y = Number(y+3)
				    		img.src = 'woodps1.png';
				    	}
				    }
				}
				if(base.p[i].gun == 2){
					if(base.p[i].inventory.axe == 1){
						if(base.p[i].cent === 0) {
				    		x = Number(x+25)
				    		y = Number(y+2)
				    		img.src = 'woodas.png';
				    	}
				    	if(base.p[i].cent === 1) {
							x = Number(x-7)
				    		y = Number(y+3)
				    		img.src = 'woodas1.png';
				    	}
					}
				}
			    ctx.drawImage(img, x, y)
			    	ctx.font = 'bold 13px sans';
			    	ctx.fillStyle = "#ffffff";
					ctx.textAlign = 'center';
					ctx.fillText(`${base.p[i].nick}`, xnick, ynick);
				}
		    }

		   

		    var dataUrl = canvas.toDataURL();

		    img.src = `${dataUrl}`;

		    var canvass = createCanvas(700, 400);
			var ctxs = canvass.getContext('2d');

			xplayers = Math.floor(xplayers-330)
			xplayers = -xplayers

			yplayers = Math.floor(yplayers-178)
			yplayers = -yplayers

		    ctxs.drawImage(img, xplayers, yplayers)


			ctxs.font = '30px canvas';
		   	ctxs.fillStyle = "#751404";
			//ctx.textAlign = '';
			ctxs.fillText(`X: ${base.p[base.i[context.senderId].id].world.x}, Y: ${base.p[base.i[context.senderId].id].world.y}`, 518, 386);

			img.src = 'coin.png';
		    ctxs.drawImage(img, 4, 371)

			ctxs.font = 'bold 20px canvas';
		    ctxs.fillStyle = "#ffffff";
		    ctxs.fillText(`${base.p[base.i[context.senderId].id].balance}`, 31, 392)

		    yplayers = await loadImage(base.p[base.i[context.senderId].id].photo_50)
			ctxs.drawImage(yplayers, 2, 2)

			img.src = `gui.png`;
			ctxs.drawImage(img, 0, 0)
			
			ctxs.font = '15px canvas';
		    ctx.fillStyle = "#ffffff";
			ctxs.textAlign = 'center';
			ctxs.fillText(`${base.p[base.i[context.senderId].id].lvl}`, 47, 54);

			return context.sendPhotos(canvass.toBuffer())
		} else {
			context.send(`–ë–∏—Ç—å —Å–≤–∏–Ω–µ–π –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å –º–µ—á–µ–º!\n–ù–∞–ø–∏—à–∏—Ç–µ: "–ø—Ä–µ–¥–º–µ—Ç –º–µ—á"`)
		}
	}
})

updates.hear(/–¥—É—ç–ª—å/i, async (context) => {
	if(base.p[base.i[context.senderId].id].duel == 0) context.send(`>> –í–∫–ª—é—á–µ–Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è [–î—É—ç–ª–∏]`)
	const { registerFont, createCanvas, loadImage } = require('canvas');
	registerFont('canvas.ttf', { family: 'canvas' })
	var canvas = createCanvas(500, 300);
	var ctx = canvas.getContext('2d');
	var Image = Canvas.Image;
	var img = new Image();
	img.src = 'duels.png';
	ctx.drawImage(img, 0, 0)
	let x = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.xd)
	let y = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.yd)
	if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 0) img.src = 'guard.png';
	if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 1) img.src = 'guard1.png';
	ctx.drawImage(img, x, y)
	return context.sendPhotos(canvas.toBuffer())
})

updates.hear(/–¥—É—ç–ª–∫—Ä—É—Ç–∞—è/i, async (context) => {
	let random = getRandomInRange(1, 2)
	duel.c.id += 1
	if(random == 1){
		console.log(1)
		base.p[base.i[context.senderId].id].world.xd = Number(19)
		base.p[base.i[context.senderId].id].world.yd = Number(134)
		duel.d[duel.c.id] = {
			player: base.i[context.senderId].id,
			player1: 2,
			time: 3
		}
		base.p[base.i[context.senderId].id].cent = 0
	}
	if(random == 2){
		console.log(2)
		base.p[base.i[context.senderId].id].world.xd = Number(452)
		base.p[base.i[context.senderId].id].world.yd = Number(134)
		duel.d[duel.c.id] = {
			player: base.i[context.senderId].id,
			player1: 2,
			time: 3
		}
		base.p[base.i[context.senderId].id].cent = 1
	}
	base.p[base.i[context.senderId].id].duel = Number(duel.c.id)
	base.p[base.i[context.senderId].id].gun = 1
	base.p[base.i[context.senderId].id].worlds = -100
	console.log(3)
	context.send(`>> –í–∫–ª—é—á–µ–Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è [–î—É—ç–ª–∏]`)
	const { registerFont, createCanvas, loadImage } = require('canvas');
	registerFont('canvas.ttf', { family: 'canvas' })
	var canvas = createCanvas(500, 300);
	var ctx = canvas.getContext('2d');
	var Image = Canvas.Image;
	var img = new Image();
	img.src = 'duels.png';
	ctx.drawImage(img, 0, 0)
	duel.d[base.p[base.i[context.senderId].id].duel]
	let x = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.xd)
	let y = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.yd)
	if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 0) img.src = 'guard.png';
	if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 1) img.src = 'guard1.png';
	ctx.drawImage(img, x, y)
	return context.sendPhotos(canvas.toBuffer())
})

updates.hear(/–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å/i, async (context) => {
	if(base.p[base.i[context.senderId].id].worlds === 0){
		let xplayers = Number(base.p[base.i[context.senderId].id].world.x)
		let yplayers = Number(base.p[base.i[context.senderId].id].world.y)
		if(near(xplayers, yplayers, 1416, 665) === true){
			return context.send({
				message: `–£–π–¥–∏, —è –∑–∞–Ω—è—Ç!`,
				attachment: 'photo-189875029_457239027',
				keyboard: Keyboard.keyboard([
					[
						Keyboard.textButton({
							label: '??',
							color: Keyboard.POSITIVE_COLOR
						})
					]
				]).inline
			})
		}
		if(near(xplayers, yplayers, 1300, 710,) === true){
			return context.send({
				message: `–ü—Ä–∏–≤–µ—Ç! –Ø - –õ–∞—É—Ä–∞, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? [INLINE –ö–Ω–æ–ø–∫–∏]\n–ï—Å–ª–∏ –≤—ã —Å–∏–¥–∏—Ç–µ —Å –ü–ö —Ç–æ –∏–≥—Ä–∞–π—Ç–µ —Å —Å–∞–π—Ç–∞: m.vk.com`,
				attachment: 'photo-189875029_457239021',
				keyboard: Keyboard.keyboard([
					[
						Keyboard.textButton({
							label: 'üìã –ö–≤–µ—Å—Ç—ã',
							color: Keyboard.POSITIVE_COLOR
						}),
						Keyboard.textButton({
							label: 'üõí –ü—Ä–æ–¥–∞–∂–∞',
							color: Keyboard.PRIMARY_COLOR
						})
					]
				]).inline(true)
			})
		}

			context.send(`–ß—Ç–æ-–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å—Ç–∞—Ç—å –ø–µ—Ä–µ–¥ NPC, –ø—Ä–µ–¥–º–µ—Ç–æ–º.`)
		}
})

updates.hear(/—Å–∫–∞–∑–∞—Ç—å (.*)/i, async (context) => {
	if(base.p[base.i[context.senderId].id].worlds === 0){
		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(2773, 2235);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'pole.png';
	    ctx.drawImage(img, 0, 0) // (-433, -459)-83
		let xplayers = Number(base.p[base.i[context.senderId].id].world.x)
		let yplayers = Number(base.p[base.i[context.senderId].id].world.y)

		var playernear = []

		for(let i in mobs.objects.tree){
	    	if(mobs.objects.tree[i].dead === 0){
				var img = new Image();
				img.src = 'tree.png';
	    		ctx.drawImage(img, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy)
	    	}
	    }

	    for(let i in mobs.mob){
		    	if(mobs.mob[i].type === 1){
		    		if(mobs.mob[i].cent === 0){
		    			img.src = `${mobs.mob[i].pig}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
					if(mobs.mob[i].cent === 1){
		    			img.src = `${mobs.mob[i].pig1}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
		    	}
		    }

	    for(let i in base.p){
	    	if(base.p[i].online === 1){
		    	let x = base.p[i].world.x
		    	let y = base.p[i].world.y
		    	if(base.p[i].cent === 0) img.src = 'guard.png'
		    	if(base.p[i].cent === 1) img.src = 'guard1.png'
		    	ctx.drawImage(img, x, y)
		    	let xnick = base.p[i].world.x+17
		    	let ynick = base.p[i].world.y-5
		    	if(base.p[i].gun == 1){
		    	if(base.p[i].inventory.sword == 1){
			    	if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodps.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodps1.png';
			    	}
			    }
			}
			if(base.p[i].gun == 2){
				if(base.p[i].inventory.axe == 1){
					if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodas.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodas1.png';
			    	}
				}
			}
		    ctx.drawImage(img, x, y)
		    	ctx.font = 'bold 13px sans';
		    	ctx.fillStyle = "#ffffff";
				ctx.textAlign = 'center';
				ctx.fillText(`${base.p[i].nick}`, xnick, ynick);

				if(base.p[i].id != context.senderId){
					if(near(xplayers, yplayers, base.p[i].world.x, base.p[i].world.y) === true){
						playernear.push(base.p[i].id)
					}
				}
			}
	    }

	    if(playernear.length > 0){
		    for(let i = 0; i < playernear.length; i++){
		    	vk.api.messages.send({
		    		message: `–†—è–¥–æ–º —Å—Ç–æ—è—â–∏–π —Å –≤–∞–º–∏ *id${context.senderId} (${base.p[base.i[context.senderId].id].nick}) —Å–∫–∞–∑–∞–ª:\n // ${context.$match[1]}\n–ß—Ç–æ-–±—ã —Å–∫–∞–∑–∞—Ç—å –∫–æ–º—É-—Ç–æ —á—Ç–æ-—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ: "—Å–∫–∞–∑–∞—Ç—å (—Ç–µ–∫—Å—Ç)"`,
		    		user_id: playernear[i]
		    	})
		    }
		}

	    if(playernear.length == 0) context.send(`–†—è–¥–æ–º —Å –≤–∞–º–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ –æ–∫–∞–∑–∞–ª–æ—Å—å, –≤—ã —Å–∫–∞–∑–∞–ª–∏ —Å–∞–º–∏ —Å–µ–±–µ :)`)

	    	ctx.font = 'bold 15px canvas';
	    	ctx.fillStyle = "#ffec18";
			ctx.textAlign = 'center';
			ctx.fillText(`–õ–∞—É—Ä–∞`, 1297, 683);

	    var dataUrl = canvas.toDataURL();

	    img.src = `${dataUrl}`;

	    var canvass = createCanvas(700, 400);
		var ctxs = canvass.getContext('2d');

		xplayers = Math.floor(xplayers-330)
		xplayers = -xplayers

		yplayers = Math.floor(yplayers-178)
		yplayers = -yplayers

	    ctxs.drawImage(img, xplayers, yplayers)


		ctxs.font = '30px canvas';
	   	ctxs.fillStyle = "#751404";
		//ctx.textAlign = '';
		ctxs.fillText(`X: ${base.p[base.i[context.senderId].id].world.x}, Y: ${base.p[base.i[context.senderId].id].world.y}`, 518, 386);

		img.src = 'coin.png';
	    ctxs.drawImage(img, 4, 371)

		ctxs.font = 'bold 20px canvas';
	    ctxs.fillStyle = "#ffffff";
	    ctxs.fillText(`${base.p[base.i[context.senderId].id].balance}`, 31, 392)

	    yplayers = await loadImage(base.p[base.i[context.senderId].id].photo_50)
		ctxs.drawImage(yplayers, 2, 2)

		img.src = `gui.png`;
		ctxs.drawImage(img, 0, 0)
		
		ctxs.font = '15px canvas';
	    ctx.fillStyle = "#ffffff";
		ctxs.textAlign = 'center';
		ctxs.fillText(`${base.p[base.i[context.senderId].id].lvl}`, 47, 54);

		return context.sendPhotos(canvass.toBuffer())
}
})

updates.hear(/–ø—Ä–µ–¥–º–µ—Ç —É–±—Ä–∞—Ç—å/i, async (context) => {
	if(base.p[base.i[context.senderId].id].duel !== 0) return context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –º–µ–Ω—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤–æ –≤—Ä–µ–º—è –¥—É—ç–ª—è.`)
	if(base.p[base.i[context.senderId].id].gun === 0) return context.send(`–í –≤–∞—à–∏—Ö —Ä—É–∫–∞—Ö –Ω–∏—á–µ–≥–æ –Ω–µ—Ç.`)
	base.p[base.i[context.senderId].id].gun = 0
	return context.send(`–í—ã —É–±—Ä–∞–ª–∏ –∏–∑ —Ä—É–∫ –ø—Ä–µ–¥–º–µ—Ç.`)
})

updates.hear(/–ø—Ä–µ–¥–º–µ—Ç –º–µ—á/i, async (context) => {
	if(base.p[base.i[context.senderId].id].duel !== 0) return context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –º–µ–Ω—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤–æ –≤—Ä–µ–º—è –¥—É—ç–ª—è.`)
	if(base.p[base.i[context.senderId].id].gun === 1) return context.send(`–í—ã —É–∂–µ –¥–µ—Ä–∂–∏—Ç–µ –º–µ—á.`)
	base.p[base.i[context.senderId].id].gun = 1
	if(base.p[base.i[context.senderId].id].inventory.sword == 1) return context.send(`–í—ã –≤–∑—è–ª–∏ –≤ —Ä—É–∫–∏: "–¥–µ—Ä–µ–≤—è–Ω–Ω—ã–π –º–µ—á".`)
})

updates.hear(/–ø—Ä–µ–¥–º–µ—Ç —Ç–æ–ø–æ—Ä/i, async (context) => {
	if(base.p[base.i[context.senderId].id].duel !== 0) return context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –º–µ–Ω—è—Ç—å –ø—Ä–µ–¥–º–µ—Ç –≤–æ –≤—Ä–µ–º—è –¥—É—ç–ª—è.`)
	if(base.p[base.i[context.senderId].id].gun === 2) return context.send(`–í—ã —É–∂–µ –¥–µ—Ä–∂–∏—Ç–µ —Ç–æ–ø–æ—Ä.`)
	base.p[base.i[context.senderId].id].gun = 2
	if(base.p[base.i[context.senderId].id].inventory.axe == 1) return context.send(`–í—ã –≤–∑—è–ª–∏ –≤ —Ä—É–∫–∏: "–¥–µ—Ä–µ–≤—è–Ω–Ω—ã–π —Ç–æ–ø–æ—Ä".`)
})

updates.hear(/–ø—Ä–µ–¥–º–µ—Ç/i, async (context) => {
	return context.send(`||||\n–ü—Ä–µ–¥–º–µ—Ç —É–±—Ä–∞—Ç—å,\n–ü—Ä–µ–¥–º–µ—Ç –º–µ—á,\n–ü—Ä–µ–¥–º–µ—Ç —Ç–æ–ø–æ—Ä`)
})

updates.hear(/üî®/i, async (context) => {
	if(base.p[base.i[context.senderId].id].caseopen == 1) return
	if(base.p[base.i[context.senderId].id].worlds === 0){
		if(base.p[base.i[context.senderId].id].gun !== 2) return context.send(`–£ –≤–∞—Å –Ω–µ—Ç –≤ —Ä—É–∫–∞—Ö —Ç–æ–ø–æ—Ä–∞, –≤–æ–∑—å–º–∏—Ç–µ –µ–≥–æ –ø—Ä–æ–ø–∏—Å–∞–≤ –∫–æ–º–∞–Ω–¥—É: "–ø—Ä–µ–¥–º–µ—Ç —Ç–æ–ø–æ—Ä"`)
		base.p[base.i[context.senderId].id].caseopen = 1
		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(2773, 2235);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var textss = ``
		var img = new Image();
		img.src = 'pole.png';
	    ctx.drawImage(img, 0, 0) // (-433, -459)-83
		let xplayers = Number(base.p[base.i[context.senderId].id].world.x)
		let yplayers = Number(base.p[base.i[context.senderId].id].world.y)
		let put = -10
		for(let i in mobs.objects.tree){
			if(nearhard(xplayers, yplayers, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy, 50, 65, -30, -25) == true) {
			   	put = i
			}
		}
		if(put == -10) {
			textss = `–ü–æ–±–ª–∏–∑–æ—Å—Ç–∏ —Å –≤–∞–º–∏ –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –æ–±—ä–µ–∫—Ç–æ–≤ (–ø–æ–¥–æ–π–¥–∏—Ç–µ –≤ –ø–ª–æ—Ç–Ω—É—é)`
		} else {
		mobs.objects.tree[put].hp -= Number(base.p[base.i[context.senderId].id].axehp)
		if(mobs.objects.tree[put].hp < 1){
		 delete mobs.objects.tree[put]
		 base.c.trees -= 1
		 let wood = Number(getRandomInRange(1, 3))
		let exp = Number(getRandomInRange(1,2))
		 base.p[base.i[context.senderId].id].inventory.wood += Number(wood)
		 base.p[base.i[context.senderId].id].exp += Number(exp)

		 textss = `–í—ã —É—Å–ø–µ—à–Ω–æ —Å—Ä—É–±–∏–ª–∏ –¥–µ—Ä–µ–≤–æ ‚Ññ${put}\n–í—ã –ø–æ–ª—É—á–∏–ª–∏: ${wood}–¥. , ${exp}–æ–ø.`
		} else {
			textss = `–í—ã —É—Å–ø–µ—à–Ω–æ —Ä—É–±–∏—Ç–µ –¥–µ—Ä–µ–≤–æ ‚Ññ${put}.\n–ü—Ä–æ—á–Ω–æ—Å—Ç—å –¥–µ—Ä–µ–≤–∞: ${mobs.objects.tree[put].hp}üõ°`
		}
		}

		for(let i in mobs.objects.tree){
	    	if(mobs.objects.tree[i].dead === 0){
				var img = new Image();
				img.src = 'tree.png';
	    		ctx.drawImage(img, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy)
	    	}
	    }

	    for(let i in mobs.mob){
		    	if(mobs.mob[i].type === 1){
		    		if(mobs.mob[i].cent === 0){
		    			img.src = `${mobs.mob[i].pig}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
					if(mobs.mob[i].cent === 1){
		    			img.src = `${mobs.mob[i].pig1}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
		    	}
		    }

	    for(let i in base.p){
	    	if(base.p[i].online === 1){
	    	let x = base.p[i].world.x
	    	let y = base.p[i].world.y
	    	if(base.p[i].cent === 0) img.src = 'guard.png'
	    	if(base.p[i].cent === 1) img.src = 'guard1.png'
	    	ctx.drawImage(img, x, y)
	    	let xnick = base.p[i].world.x+17
	    	let ynick = base.p[i].world.y-5
	    	if(base.p[i].gun == 1){
		    	if(base.p[i].inventory.sword == 1){
			    	if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodps.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodps1.png';
			    	}
			    }
			}
			if(base.p[i].gun == 2){
				if(base.p[i].inventory.axe == 1){
					if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodas.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodas1.png';
			    	}
				}
			}
	    	ctx.drawImage(img, x, y)
	    	ctx.font = 'bold 13px sans';
	    	ctx.fillStyle = "#ffffff";
			ctx.textAlign = 'center';
			ctx.fillText(`${base.p[i].nick}`, xnick, ynick);
		}
	    }

	    	ctx.font = 'bold 15px canvas';
	    	ctx.fillStyle = "#ffec18";
			ctx.textAlign = 'center';
			ctx.fillText(`–õ–∞—É—Ä–∞`, 1297, 683);

	    var dataUrl = canvas.toDataURL();

	    img.src = `${dataUrl}`;

	    var canvass = createCanvas(700, 400);
		var ctxs = canvass.getContext('2d');

		xplayers = Math.floor(xplayers-330)
		xplayers = -xplayers

		yplayers = Math.floor(yplayers-178)
		yplayers = -yplayers

	    ctxs.drawImage(img, xplayers, yplayers)

		ctxs.font = '30px canvas';
	   	ctxs.fillStyle = "#751404";
		//ctx.textAlign = '';
		ctxs.fillText(`X: ${base.p[base.i[context.senderId].id].world.x}, Y: ${base.p[base.i[context.senderId].id].world.y}`, 518, 386);

		img.src = 'coin.png';
	    ctxs.drawImage(img, 4, 371)

		ctxs.font = 'bold 20px canvas';
	    ctxs.fillStyle = "#ffffff";
	    ctxs.fillText(`${base.p[base.i[context.senderId].id].balance}`, 31, 392)

	    yplayers = await loadImage(base.p[base.i[context.senderId].id].photo_50)
		ctxs.drawImage(yplayers, 2, 2)

		img.src = `gui.png`;
		ctxs.drawImage(img, 0, 0)
		
		ctxs.font = '15px canvas';
	    ctx.fillStyle = "#ffffff";
		ctxs.textAlign = 'center';
		ctxs.fillText(`${base.p[base.i[context.senderId].id].lvl}`, 47, 54);


		base.p[base.i[context.senderId].id].caseopen = 0

		return context.sendPhotos({
			value: canvass.toBuffer()
		}, {
			message: `${textss}`
		})
	}
})

updates.hear(/–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å/i, async (context) => {
	if(base.p[base.i[context.senderId].id].worlds === 0){
		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(2773, 2235);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'pole.png';
	    ctx.drawImage(img, 0, 0) // (-433, -459)-83
	var xplayers = Number(base.p[base.i[context.senderId].id].world.x)
	var yplayers = Number(base.p[base.i[context.senderId].id].world.y)
	for(let i in mobs.objects.tree){
		if(nearhard(xplayers, yplayers, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy, 50, 65, -30, -25) == true) {
		   	put = i
		}
	}
	for(let i in mobs.objects.tree){
	    	if(mobs.objects.tree[i].dead === 0){
				var img = new Image();
				img.src = 'tree.png';
	    		ctx.drawImage(img, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy)
	    	}
	    }

	    for(let i in mobs.mob){
		    	if(mobs.mob[i].type === 1){
		    		if(mobs.mob[i].cent === 0){
		    			img.src = `${mobs.mob[i].pig}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
					if(mobs.mob[i].cent === 1){
		    			img.src = `${mobs.mob[i].pig1}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
		    	}
		    }
	    for(let i in base.p){
	    	if(base.p[i].online === 1){
	    	var x = base.p[i].world.x
	    	var y = base.p[i].world.y
	    	if(base.p[i].cent === 0) img.src = 'guard.png'
	    	if(base.p[i].cent === 1) img.src = 'guard1.png'
	    	ctx.drawImage(img, x, y)
	    	var xnick = base.p[i].world.x+17
	    	var ynick = base.p[i].world.y-5
	    	if(base.p[i].gun == 1){
		    	if(base.p[i].inventory.sword == 1){
			    	if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodps.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodps1.png';
			    	}
			    }
			}
			if(base.p[i].gun == 2){
				if(base.p[i].inventory.axe == 1){
					if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodas.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodas1.png';
			    	}
				}
			}
	    	ctx.drawImage(img, x, y)
	    	ctx.font = 'bold 13px sans';
	    	ctx.fillStyle = "#ffffff";
			ctx.textAlign = 'center';
			ctx.fillText(`${base.p[i].nick}`, xnick, ynick);
		}
	    }



	    	ctx.font = 'bold 15px canvas';
	    	ctx.fillStyle = "#ffec18";
			ctx.textAlign = 'center';
			ctx.fillText(`–õ–∞—É—Ä–∞`, 1297, 683);

	    var dataUrl = canvas.toDataURL();

	    img.src = `${dataUrl}`;

	    var canvass = createCanvas(700, 400);
		var ctxs = canvass.getContext('2d');

		xplayers = Math.floor(xplayers-330)
		xplayers = -xplayers

		yplayers = Math.floor(yplayers-178)
		yplayers = -yplayers

	    ctxs.drawImage(img, xplayers, yplayers)

		ctxs.font = '30px canvas';
	   	ctxs.fillStyle = "#751404";
		//ctx.textAlign = '';
		ctxs.fillText(`X: ${base.p[base.i[context.senderId].id].world.x}, Y: ${base.p[base.i[context.senderId].id].world.y}`, 518, 386);

		img.src = 'inventory.png';
	    ctxs.drawImage(img, 432, 15) // (-433, -459)-83

	    var count = 0
	    var coordx = 0
	    var coordy = 0

	

	    if(base.p[base.i[context.senderId].id].inventory.sword == 1){
	    	count += 1
	    	if(count > 0) {
	    		coordy = 54
	    		coordx = Number(count)
	    	}
	    	if(count > 4) {
				coordy = 108
				coordx = Number(count-4)
			}
	    	if(count > 8) {
	    		coordy = 162
	    		coordx = Number(count-8)
	    	}
	    	if(count > 12) {
	    		coordy = 216
	    		coordx = Number(count-12)
	    	}
	    	if(count > 16) {
	    		coordy = 270
	    		coordx = Number(count-16)
	    	}
	    	if(count > 20) {
	    		coordy = 324
	    		coordx = Number(count-20)
	    	}
	    	if(coordx == 1){
	    		coordx = 441
	    	}
	    	if(coordx == 2){
	    		coordx = 494
	    	}
	    	if(coordx == 3){
	    		coordx = 548
	    	}
	    	if(coordx == 4){
	    		coordx = 601
	    	}
	    	img.src = 'swordp.png';
	    	ctxs.drawImage(img, coordx, coordy)
			ctxs.font = 'bold 10px sans';
	    	ctxs.fillStyle = "#ffffff";
			//ctx.textAlign = 'center';
			coordy += 44
			ctxs.fillText(`1—à—Ç.`, coordx, coordy);
	    }

	    if(base.p[base.i[context.senderId].id].inventory.pickaxe == 1){
	    	count += 1
	    	if(count > 0) {
	    		coordy = 54
	    		coordx = Number(count)
	    	}
	    	if(count > 4) {
				coordy = 108
				coordx = Number(count-4)
			}
	    	if(count > 8) {
	    		coordy = 162
	    		coordx = Number(count-8)
	    	}
	    	if(count > 12) {
	    		coordy = 216
	    		coordx = Number(count-12)
	    	}
	    	if(count > 16) {
	    		coordy = 270
	    		coordx = Number(count-16)
	    	}
	    	if(count > 20) {
	    		coordy = 324
	    		coordx = Number(count-20)
	    	}
	    	if(coordx == 1){
	    		coordx = 441
	    	}
	    	if(coordx == 2){
	    		coordx = 494
	    	}
	    	if(coordx == 3){
	    		coordx = 548
	    	}
	    	if(coordx == 4){
	    		coordx = 601
	    	}
	    	img.src = 'woodp.png';
	    	ctxs.drawImage(img, coordx, coordy)
			ctxs.font = 'bold 10px sans';
	    	ctxs.fillStyle = "#ffffff";
			//ctx.textAlign = 'center';
			coordy += 44
			ctxs.fillText(`1—à—Ç.`, coordx, coordy);
	    }

	    if(base.p[base.i[context.senderId].id].inventory.axe == 1){
	    	count += 1
	    	if(count > 0) {
	    		coordy = 54
	    		coordx = Number(count)
	    	}
	    	if(count > 4) {
				coordy = 108
				coordx = Number(count-4)
			}
	    	if(count > 8) {
	    		coordy = 162
	    		coordx = Number(count-8)
	    	}
	    	if(count > 12) {
	    		coordy = 216
	    		coordx = Number(count-12)
	    	}
	    	if(count > 16) {
	    		coordy = 270
	    		coordx = Number(count-16)
	    	}
	    	if(count > 20) {
	    		coordy = 324
	    		coordx = Number(count-20)
	    	}
	    	if(coordx == 1){
	    		coordx = 441
	    	}
	    	if(coordx == 2){
	    		coordx = 494
	    	}
	    	if(coordx == 3){
	    		coordx = 548
	    	}
	    	if(coordx == 4){
	    		coordx = 601
	    	}
	    	img.src = 'axep.png';
	    	ctxs.drawImage(img, coordx, coordy)
			ctxs.font = 'bold 10px sans';
	    	ctxs.fillStyle = "#ffffff";
			//ctx.textAlign = 'center';
			coordy += 44
			ctxs.fillText(`1—à—Ç.`, coordx, coordy);
	    }

	    if(base.p[base.i[context.senderId].id].inventory.pig > 0){
	    	count += 1
	    	if(count > 0) {
	    		coordy = 54
	    		coordx = Number(count)
	    	}
	    	if(count > 4) {
				coordy = 108
				coordx = Number(count-4)
			}
	    	if(count > 8) {
	    		coordy = 162
	    		coordx = Number(count-8)
	    	}
	    	if(count > 12) {
	    		coordy = 216
	    		coordx = Number(count-12)
	    	}
	    	if(count > 16) {
	    		coordy = 270
	    		coordx = Number(count-16)
	    	}
	    	if(count > 20) {
	    		coordy = 324
	    		coordx = Number(count-20)
	    	}
	    	if(coordx == 1){
	    		coordx = 441
	    	}
	    	if(coordx == 2){
	    		coordx = 494
	    	}
	    	if(coordx == 3){
	    		coordx = 548
	    	}
	    	if(coordx == 4){
	    		coordx = 601
	    	}
	    	img.src = 'pigeat.png';
	    	ctxs.drawImage(img, coordx, coordy)
			ctxs.font = 'bold 10px sans';
	    	ctxs.fillStyle = "#ffffff";
			//ctx.textAlign = 'center';
			coordy += 44
			ctxs.fillText(`${base.p[base.i[context.senderId].id].inventory.pig}—à—Ç.`, coordx, coordy);
	    }

	    if(base.p[base.i[context.senderId].id].inventory.wood > 0){
	    	count += 1
	    	if(count > 0) {
	    		coordy = 54
	    		coordx = Number(count)
	    	}
	    	if(count > 4) {
				coordy = 108
				coordx = Number(count-4)
			}
	    	if(count > 8) {
	    		coordy = 162
	    		coordx = Number(count-8)
	    	}
	    	if(count > 12) {
	    		coordy = 216
	    		coordx = Number(count-12)
	    	}
	    	if(count > 16) {
	    		coordy = 270
	    		coordx = Number(count-16)
	    	}
	    	if(count > 20) {
	    		coordy = 324
	    		coordx = Number(count-20)
	    	}
	    	if(coordx == 1){
	    		coordx = 441
	    	}
	    	if(coordx == 2){
	    		coordx = 494
	    	}
	    	if(coordx == 3){
	    		coordx = 548
	    	}
	    	if(coordx == 4){
	    		coordx = 601
	    	}
	    	img.src = 'wood.png';
	    	ctxs.drawImage(img, coordx, coordy)
			ctxs.font = 'bold 10px sans';
	    	ctxs.fillStyle = "#ffffff";
			//ctx.textAlign = 'center';
			coordy += 44
			ctxs.fillText(`${base.p[base.i[context.senderId].id].inventory.wood}—à—Ç.`, coordx, coordy);
	    }

	    img.src = 'coin.png';
	    ctxs.drawImage(img, 4, 371)

	    ctxs.font = 'bold 20px canvas';
	    ctx.fillStyle = "#ffffff";
	    ctxs.fillText(`${base.p[base.i[context.senderId].id].balance}`, 31, 392)

	    yplayers = await loadImage(base.p[base.i[context.senderId].id].photo_50)
		ctxs.drawImage(yplayers, 2, 2)

		img.src = `gui.png`;
		ctxs.drawImage(img, 0, 0)
		
		ctxs.font = '15px canvas';
	    ctxs.fillStyle = "#ffffff";
		ctxs.textAlign = 'center';
		ctxs.fillText(`${base.p[base.i[context.senderId].id].lvl}`, 47, 54);

		return context.sendPhotos(canvass.toBuffer())
	}
})

updates.hear(/–Ω–∏–∫ (.*)/i, async (context) => {
	if(context.$match[1].length > 15) return context.send(`–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –∫–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –Ω–∏–∫–µ.`)
	base.p[base.i[context.senderId].id].nick = `${context.$match[1]}`
	return context.send(`–ù–∏–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!`)
})

updates.hear(/‚¨Ö‚¨Ö‚¨Ö/i, async (context) => {
	if(base.p[base.i[context.senderId].id].caseopen == 1) return
		base.p[base.i[context.senderId].id].caseopen = 1

	if(base.p[base.i[context.senderId].id].duel != 0){
		console.log(1)
		let proverka = Number(base.p[base.i[context.senderId].id].world.xd-60)
		base.p[base.i[context.senderId].id].caseopen = 0
		if(proverka < 13) return context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
		base.p[base.i[context.senderId].id].cent = 1
		base.p[base.i[context.senderId].id].world.xd = Number(proverka)
		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(500, 300);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'duels.png';
		ctx.drawImage(img, 0, 0)
		let x = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.xd)
		let y = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.yd)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 0) img.src = 'guard.png';
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 1) img.src = 'guard1.png';
		ctx.drawImage(img, x, y)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].inventory.sword == 1){
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 0) {
			    	x = Number(x+25)
			    	y = Number(y+2)
			    	img.src = 'woodps.png';
			    }
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 1) {
					x = Number(x-7)
			    	y = Number(y+3)
			    	img.src = 'woodps1.png';
			    }
		}
		return context.sendPhotos(canvas.toBuffer())
	}

	if(base.p[base.i[context.senderId].id].worlds === 0){

	var xplayers = Number(base.p[base.i[context.senderId].id].world.x-60)
	if(xplayers < 721) {
		context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
	} else {
	base.p[base.i[context.senderId].id].world.x -= 60
	}
	base.p[base.i[context.senderId].id].cent = 1

	var yplayers = Number(base.p[base.i[context.senderId].id].world.y)


	xplayers = Number(base.p[base.i[context.senderId].id].world.x)
	yplayers = Number(base.p[base.i[context.senderId].id].world.y)

	let text = `–†—è–¥–æ–º —Å –≤–∞–º–∏: `
		let count = 0

		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(2773, 2235);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'pole.png';
	    ctx.drawImage(img, 0, 0) // (-433, -459)-83
	    
	    if(near(xplayers, yplayers, 1300, 710) === true){
	    	count += 1
	    	text += `–õ–∞—É—Ä–∞ [–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å]`
	    }

	    for(let i in mobs.objects.tree){
		   if(nearhard(xplayers, yplayers, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy, 50, 65, -30, -25) == true) {
		    	if(count > 0) text += `, –¥–µ—Ä–µ–≤–æ`
		    	if(count == 0){
		    		count += 1
		    		text += `–¥–µ—Ä–µ–≤–æ`
		    	}
		    }
	    }

	    img.src = 'tree.png';

	    for(let i in mobs.objects.tree){
	    	if(mobs.objects.tree[i].dead === 0){
	    		ctx.drawImage(img, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy)
	    	}
	    }

	    	for(let i in mobs.mob){
		    	if(mobs.mob[i].type === 1){
		    		if(mobs.mob[i].cent === 0){
		    			img.src = `${mobs.mob[i].pig}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
					if(mobs.mob[i].cent === 1){
		    			img.src = `${mobs.mob[i].pig1}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
		    		if(nearhard(xplayers, yplayers, mobs.mob[i].x, mobs.mob[i].y, 35, 35, -25, -35) == true){
			    		if(count > 0) text += `, —Å–≤–∏–Ω—å—è`
			    		if(count == 0){
			    			count += 1
			    			text += `—Å–≤–∏–Ω—å—è`
			    		}
		    		}
		    	}
	    	}

	    for(let i in base.p){
	    	if(base.p[i].online === 1){
	    	let x = base.p[i].world.x
	    	let y = base.p[i].world.y
	    	if(base.p[i].cent === 0) img.src = 'guard.png'
	    	if(base.p[i].cent === 1) img.src = 'guard1.png'
	    	ctx.drawImage(img, x, y)
	    	let xnick = base.p[i].world.x+17
	    	let ynick = base.p[i].world.y-5
	    	if(base.p[i].gun == 1){
		    	if(base.p[i].inventory.sword == 1){
			    	if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodps.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodps1.png';
			    	}
			    }
			}
			if(base.p[i].gun == 2){
				if(base.p[i].inventory.axe == 1){
					if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodas.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodas1.png';
			    	}
				}
			}
	    	ctx.drawImage(img, x, y)
	    	ctx.font = 'bold 13px sans';
	    	ctx.fillStyle = "#ffffff";
			ctx.textAlign = 'center';
			ctx.fillText(`${base.p[i].nick}`, xnick, ynick);
		}
	    }



	    	ctx.font = 'bold 15px canvas';
	    	ctx.fillStyle = "#ffec18";
			ctx.textAlign = 'center';
			ctx.fillText(`–õ–∞—É—Ä–∞`, 1297, 683);

	    var dataUrl = canvas.toDataURL();

	    img.src = `${dataUrl}`;

	    var canvass = createCanvas(700, 400);
		var ctxs = canvass.getContext('2d');

		xplayers = Math.floor(xplayers-330)
		xplayers = -xplayers

		yplayers = Math.floor(yplayers-178)
		yplayers = -yplayers

	    ctxs.drawImage(img, xplayers, yplayers)

		ctxs.font = '30px canvas';
	   	ctxs.fillStyle = "#751404";
		//ctx.textAlign = '';
		ctxs.fillText(`X: ${base.p[base.i[context.senderId].id].world.x}, Y: ${base.p[base.i[context.senderId].id].world.y}`, 518, 386);

		img.src = 'coin.png';
	    ctxs.drawImage(img, 4, 371)

	    ctxs.font = 'bold 20px canvas';
	    ctxs.fillStyle = "#ffffff";
	    ctxs.fillText(`${base.p[base.i[context.senderId].id].balance}`, 31, 392)

	 

	    yplayers = await loadImage(base.p[base.i[context.senderId].id].photo_50)
		ctxs.drawImage(yplayers, 2, 2)

		img.src = `gui.png`;
		ctxs.drawImage(img, 0, 0)

		ctxs.font = '15px canvas';
	    ctxs.fillStyle = "#ffffff";
		ctxs.textAlign = 'center';
		ctxs.fillText(`${base.p[base.i[context.senderId].id].lvl}`, 47, 54);

		base.p[base.i[context.senderId].id].caseopen = 0
		if(count < 1) return context.sendPhotos(canvass.toBuffer())
		if(count > 0){
			return context.sendPhotos({
				value: canvass.toBuffer()
			}, {
				message: `${text}`
			})
		}
}})

updates.hear(/‚¨Ö/i, async (context) => {
	if(base.p[base.i[context.senderId].id].caseopen == 1) return
	base.p[base.i[context.senderId].id].caseopen = 1

	if(base.p[base.i[context.senderId].id].duel != 0){
		console.log(1)
		let proverka = Number(base.p[base.i[context.senderId].id].world.xd-20)
		base.p[base.i[context.senderId].id].caseopen = 0
		if(proverka < 13) return context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
		base.p[base.i[context.senderId].id].cent = 1
		base.p[base.i[context.senderId].id].world.xd = Number(proverka)
		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(500, 300);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'duels.png';
		ctx.drawImage(img, 0, 0)
		let x = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.xd)
		let y = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.yd)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 0) img.src = 'guard.png';
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 1) img.src = 'guard1.png';
		ctx.drawImage(img, x, y)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].inventory.sword == 1){
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 0) {
			    	x = Number(x+25)
			    	y = Number(y+2)
			    	img.src = 'woodps.png';
			    }
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 1) {
					x = Number(x-7)
			    	y = Number(y+3)
			    	img.src = 'woodps1.png';
			    }
		}
		return context.sendPhotos(canvas.toBuffer())
	}

	if(base.p[base.i[context.senderId].id].worlds === 0){

	var xplayers = Number(base.p[base.i[context.senderId].id].world.x-20)
	if(xplayers < 721) {
		context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
	} else {
	base.p[base.i[context.senderId].id].world.x -= 20
	}
	base.p[base.i[context.senderId].id].cent = 1

	var yplayers = Number(base.p[base.i[context.senderId].id].world.y+20)


	xplayers = Number(base.p[base.i[context.senderId].id].world.x)
	yplayers = Number(base.p[base.i[context.senderId].id].world.y)

	let text = `–†—è–¥–æ–º —Å –≤–∞–º–∏: `
		let count = 0

		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(2773, 2235);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'pole.png';
	    ctx.drawImage(img, 0, 0) // (-433, -459)-83
	    
	    if(near(xplayers, yplayers, 1300, 710) === true){
	    	count += 1
	    	text += `–õ–∞—É—Ä–∞ [–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å]`
	    }

	    for(let i in mobs.objects.tree){
		    if(nearhard(xplayers, yplayers, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy, 50, 65, -30, -25) == true) {
		    	if(count > 0) text += `, –¥–µ—Ä–µ–≤–æ`
		    	if(count == 0){
		    		count += 1
		    		text += `–¥–µ—Ä–µ–≤–æ`
		    	}
		    }
	    }

	    img.src = 'tree.png';

	    for(let i in mobs.objects.tree){
	    	if(mobs.objects.tree[i].dead === 0){
	    		ctx.drawImage(img, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy)
	    	}
	    }

	   for(let i in mobs.mob){
		    	if(mobs.mob[i].type === 1){
		    		if(mobs.mob[i].cent === 0){
		    			img.src = `${mobs.mob[i].pig}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
					if(mobs.mob[i].cent === 1){
		    			img.src = `${mobs.mob[i].pig1}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
		    		if(nearhard(xplayers, yplayers, mobs.mob[i].x, mobs.mob[i].y, 35, 35, -25, -35) == true){
			    		if(count > 0) text += `, —Å–≤–∏–Ω—å—è`
			    		if(count == 0){
			    			count += 1
			    			text += `—Å–≤–∏–Ω—å—è`
			    		}
		    		}
		    	}
	    	}

	    for(let i in base.p){
	    	if(base.p[i].online === 1){
	    	let x = base.p[i].world.x
	    	let y = base.p[i].world.y
	    	if(base.p[i].cent === 0) img.src = 'guard.png'
	    	if(base.p[i].cent === 1) img.src = 'guard1.png'
	    	ctx.drawImage(img, x, y)
	    	let xnick = base.p[i].world.x+17
	    	let ynick = base.p[i].world.y-5
	    	if(base.p[i].gun == 1){
		    	if(base.p[i].inventory.sword == 1){
			    	if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodps.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodps1.png';
			    	}
			    }
			}
			if(base.p[i].gun == 2){
				if(base.p[i].inventory.axe == 1){
					if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodas.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodas1.png';
			    	}
				}
			}
	    	ctx.drawImage(img, x, y)
	    	ctx.font = 'bold 13px sans';
	    	ctx.fillStyle = "#ffffff";
			ctx.textAlign = 'center';
			ctx.fillText(`${base.p[i].nick}`, xnick, ynick);
		}
	    }



	    	ctx.font = 'bold 15px canvas';
	    	ctx.fillStyle = "#ffec18";
			ctx.textAlign = 'center';
			ctx.fillText(`–õ–∞—É—Ä–∞`, 1297, 683);

	    var dataUrl = canvas.toDataURL();

	    img.src = `${dataUrl}`;

	    var canvass = createCanvas(700, 400);
		var ctxs = canvass.getContext('2d');

		xplayers = Math.floor(xplayers-330)
		xplayers = -xplayers

		yplayers = Math.floor(yplayers-178)
		yplayers = -yplayers

	    ctxs.drawImage(img, xplayers, yplayers)

		ctxs.font = '30px canvas';
	   	ctxs.fillStyle = "#751404";
		//ctx.textAlign = '';
		ctxs.fillText(`X: ${base.p[base.i[context.senderId].id].world.x}, Y: ${base.p[base.i[context.senderId].id].world.y}`, 518, 386);

		yplayers = await loadImage(base.p[base.i[context.senderId].id].photo_50)
		ctxs.drawImage(yplayers, 2, 2)

		img.src = `gui.png`;
		ctxs.drawImage(img, 0, 0)
		
		ctxs.font = '15px canvas';
	    ctx.fillStyle = "#ffffff";
		ctxs.textAlign = 'center';
		ctxs.fillText(`${base.p[base.i[context.senderId].id].lvl}`, 47, 54);

		img.src = 'coin.png';
	    ctxs.drawImage(img, 4, 371)

	    ctxs.font = 'bold 20px canvas';
	    ctxs.fillStyle = "#ffffff";
	    ctxs.fillText(`${base.p[base.i[context.senderId].id].balance}`, 31, 392)

	    ctxs.font = '15px canvas';
	    ctxs.fillStyle = "#ffffff";
		ctxs.textAlign = 'center';
		ctxs.fillText(`${base.p[base.i[context.senderId].id].lvl}`, 47, 54);

		base.p[base.i[context.senderId].id].caseopen = 0

		if(count < 1) return context.sendPhotos(canvass.toBuffer())
		if(count > 0){
			return context.sendPhotos({
				value: canvass.toBuffer()
			}, {
				message: `${text}`
			})
		}
}})

updates.hear(/‚¨á‚¨á‚¨á/i, async (context) => {
	if(base.p[base.i[context.senderId].id].caseopen == 1) return
	base.p[base.i[context.senderId].id].caseopen = 1
	if(base.p[base.i[context.senderId].id].duel != 0){
		let proverka = Number(base.p[base.i[context.senderId].id].world.yd+60)
		base.p[base.i[context.senderId].id].caseopen = 0
		if(proverka > 288) return context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
		base.p[base.i[context.senderId].id].world.yd = Number(proverka)
		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(500, 300);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'duels.png';
		ctx.drawImage(img, 0, 0)
		let x = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.xd)
		let y = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.yd)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 0) img.src = 'guard.png';
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 1) img.src = 'guard1.png';
		ctx.drawImage(img, x, y)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].inventory.sword == 1){
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 0) {
			    	x = Number(x+25)
			    	y = Number(y+2)
			    	img.src = 'woodps.png';
			    }
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 1) {
					x = Number(x-7)
			    	y = Number(y+3)
			    	img.src = 'woodps1.png';
			    }
		}
		return context.sendPhotos(canvas.toBuffer())
	}
	if(base.p[base.i[context.senderId].id].worlds === 0){
	var yplayers = Number(base.p[base.i[context.senderId].id].world.y+60)
	if(yplayers > 1900) {
		context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
	} else {
		base.p[base.i[context.senderId].id].world.y += 60
	}


	var xplayers = Number(base.p[base.i[context.senderId].id].world.x)
	yplayers = Number(base.p[base.i[context.senderId].id].world.y)

	let text = `–†—è–¥–æ–º —Å –≤–∞–º–∏: `
		let count = 0

			const { registerFont, createCanvas, loadImage } = require('canvas');
			registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(2773, 2235);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'pole.png';
	    ctx.drawImage(img, 0, 0) // (-433, -459)-83

	    if(near(xplayers, yplayers, 1300, 710) === true){
	    	count += 1
	    	text += `–õ–∞—É—Ä–∞ [–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å]`
	    }
	    
	    for(let i in mobs.objects.tree){
		    if(nearhard(xplayers, yplayers, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy, 50, 65, -30, -25) == true) {
		    	if(count > 0) text += `, –¥–µ—Ä–µ–≤–æ`
		    	if(count == 0){
		    		count += 1
		    		text += `–¥–µ—Ä–µ–≤–æ`
		    	}
		    }
	    }

	    img.src = 'tree.png';

		for(let i in mobs.objects.tree){
	    	if(mobs.objects.tree[i].dead === 0){
	    		ctx.drawImage(img, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy)
	    	}
	    }

	    for(let i in mobs.mob){
		    	if(mobs.mob[i].type === 1){
		    		if(mobs.mob[i].cent === 0){
		    			img.src = `${mobs.mob[i].pig}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
					if(mobs.mob[i].cent === 1){
		    			img.src = `${mobs.mob[i].pig1}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
		    		if(nearhard(xplayers, yplayers, mobs.mob[i].x, mobs.mob[i].y, 35, 35, -25, -35) == true){
			    		if(count > 0) text += `, —Å–≤–∏–Ω—å—è`
			    		if(count == 0){
			    			count += 1
			    			text += `—Å–≤–∏–Ω—å—è`
			    		}
		    		}
		    	}
	    	}

	    for(let i in base.p){
	    	if(base.p[i].online === 1){
	    	let x = base.p[i].world.x
	    	let y = base.p[i].world.y
	    	if(base.p[i].cent === 0) img.src = 'guard.png'
	    	if(base.p[i].cent === 1) img.src = 'guard1.png'
	    	ctx.drawImage(img, x, y)
	    	let xnick = base.p[i].world.x+17
	    	let ynick = base.p[i].world.y-5
	    	if(base.p[i].gun == 1){
		    	if(base.p[i].inventory.sword == 1){
			    	if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodps.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodps1.png';
			    	}
			    }
			}
			if(base.p[i].gun == 2){
				if(base.p[i].inventory.axe == 1){
					if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodas.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodas1.png';
			    	}
				}
			}
	    	ctx.drawImage(img, x, y)
	    	ctx.font = 'bold 13px sans';
	    	ctx.fillStyle = "#ffffff";
			ctx.textAlign = 'center';
			ctx.fillText(`${base.p[i].nick}`, xnick, ynick);
		}
	    }


	    	   ctx.font = 'bold 15px canvas';
	    	ctx.fillStyle = "#ffec18";
			ctx.textAlign = 'center';
			ctx.fillText(`–õ–∞—É—Ä–∞`, 1297, 683);

	    var dataUrl = canvas.toDataURL();

	    img.src = `${dataUrl}`;

	    var canvass = createCanvas(700, 400);
		var ctxs = canvass.getContext('2d');

		xplayers = Math.floor(xplayers-330)
		xplayers = -xplayers

		yplayers = Math.floor(yplayers-178)
		yplayers = -yplayers

	    ctxs.drawImage(img, xplayers, yplayers)

		ctxs.font = '30px canvas';
	   	ctxs.fillStyle = "#751404";
		//ctx.textAlign = '';
		ctxs.fillText(`X: ${base.p[base.i[context.senderId].id].world.x}, Y: ${base.p[base.i[context.senderId].id].world.y}`, 518, 386);
		
		img.src = 'coin.png';
	    ctxs.drawImage(img, 4, 371)

	   ctxs.font = 'bold 20px canvas';
	    ctxs.fillStyle = "#ffffff";
	    ctxs.fillText(`${base.p[base.i[context.senderId].id].balance}`, 31, 392)

	    yplayers = await loadImage(base.p[base.i[context.senderId].id].photo_50)
		ctxs.drawImage(yplayers, 2, 2)

		img.src = `gui.png`;
		ctxs.drawImage(img, 0, 0)
		
		ctxs.font = '15px canvas';
	    ctx.fillStyle = "#ffffff";
		ctxs.textAlign = 'center';
		ctxs.fillText(`${base.p[base.i[context.senderId].id].lvl}`, 47, 54);

		base.p[base.i[context.senderId].id].caseopen = 0

		if(count === 0) return context.sendPhotos(canvass.toBuffer())
		if(count > 0) return context.sendPhotos({
			value: canvass.toBuffer()
		}, {
			message: `${text}`
		})
}})

updates.hear(/‚¨á/i, async (context) => {
	if(base.p[base.i[context.senderId].id].caseopen == 1) return
	base.p[base.i[context.senderId].id].caseopen = 1
	if(base.p[base.i[context.senderId].id].duel != 0){
		let proverka = Number(base.p[base.i[context.senderId].id].world.yd+20)
		base.p[base.i[context.senderId].id].caseopen = 0
		if(proverka > 288) return context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
		base.p[base.i[context.senderId].id].world.yd = Number(proverka)
		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(500, 300);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'duels.png';
		ctx.drawImage(img, 0, 0)
		let x = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.xd)
		let y = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.yd)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 0) img.src = 'guard.png';
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 1) img.src = 'guard1.png';
		ctx.drawImage(img, x, y)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].inventory.sword == 1){
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 0) {
			    	x = Number(x+25)
			    	y = Number(y+2)
			    	img.src = 'woodps.png';
			    }
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 1) {
					x = Number(x-7)
			    	y = Number(y+3)
			    	img.src = 'woodps1.png';
			    }
		}
		return context.sendPhotos(canvas.toBuffer())
	}
	if(base.p[base.i[context.senderId].id].worlds === 0){
	var yplayers = Number(base.p[base.i[context.senderId].id].world.y+20)
	if(yplayers > 1900) {
		context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
	} else {
		base.p[base.i[context.senderId].id].world.y += 20
	}


	var xplayers = Number(base.p[base.i[context.senderId].id].world.x)
	yplayers = Number(base.p[base.i[context.senderId].id].world.y)

	let text = `–†—è–¥–æ–º —Å –≤–∞–º–∏: `
		let count = 0

		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(2773, 2235);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'pole.png';
	    ctx.drawImage(img, 0, 0) // (-433, -459)-83

	    if(near(xplayers, yplayers, 1300, 710) === true){
	    	count += 1
	    	text += `–õ–∞—É—Ä–∞ [–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å]`
	    }
	    
	    for(let i in mobs.objects.tree){
		    if(nearhard(xplayers, yplayers, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy, 50, 65, -30, -25) == true) {
		    	if(count > 0) text += `, –¥–µ—Ä–µ–≤–æ`
		    	if(count == 0){
		    		count += 1
		    		text += `–¥–µ—Ä–µ–≤–æ`
		    	}
		    }
	    }

	    img.src = 'tree.png';

	for(let i in mobs.objects.tree){
	    	if(mobs.objects.tree[i].dead === 0){
	    		ctx.drawImage(img, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy)
	    	}
	    }

	    for(let i in mobs.mob){
		    	if(mobs.mob[i].type === 1){
		    		if(mobs.mob[i].cent === 0){
		    			img.src = `${mobs.mob[i].pig}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
					if(mobs.mob[i].cent === 1){
		    			img.src = `${mobs.mob[i].pig1}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
		    		if(nearhard(xplayers, yplayers, mobs.mob[i].x, mobs.mob[i].y, 35, 35, -25, -35) == true){
			    		if(count > 0) text += `, —Å–≤–∏–Ω—å—è`
			    		if(count == 0){
			    			count += 1
			    			text += `—Å–≤–∏–Ω—å—è`
			    		}
		    		}
		    	}
	    	}

	    for(let i in base.p){
	    	if(base.p[i].online === 1){
	    	let x = base.p[i].world.x
	    	let y = base.p[i].world.y
	    	if(base.p[i].cent === 0) img.src = 'guard.png'
	    	if(base.p[i].cent === 1) img.src = 'guard1.png'
	    	ctx.drawImage(img, x, y)
	    	let xnick = base.p[i].world.x+17
	    	let ynick = base.p[i].world.y-5
	    	if(base.p[i].gun == 1){
		    	if(base.p[i].inventory.sword == 1){
			    	if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodps.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodps1.png';
			    	}
			    }
			}
			if(base.p[i].gun == 2){
				if(base.p[i].inventory.axe == 1){
					if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodas.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodas1.png';
			    	}
				}
			}
	    	ctx.drawImage(img, x, y)
	    	ctx.font = 'bold 13px sans';
	    	ctx.fillStyle = "#ffffff";
			ctx.textAlign = 'center';
			ctx.fillText(`${base.p[i].nick}`, xnick, ynick);
		}
	    }


	    	   ctx.font = 'bold 15px canvas';
	    	ctx.fillStyle = "#ffec18";
			ctx.textAlign = 'center';
			ctx.fillText(`–õ–∞—É—Ä–∞`, 1297, 683);

	    var dataUrl = canvas.toDataURL();

	    img.src = `${dataUrl}`;

	    var canvass = createCanvas(700, 400);
		var ctxs = canvass.getContext('2d');

		xplayers = Math.floor(xplayers-330)
		xplayers = -xplayers

		yplayers = Math.floor(yplayers-178)
		yplayers = -yplayers

	    ctxs.drawImage(img, xplayers, yplayers)

		ctxs.font = '30px canvas';
	   	ctxs.fillStyle = "#751404";
		//ctx.textAlign = '';
		ctxs.fillText(`X: ${base.p[base.i[context.senderId].id].world.x}, Y: ${base.p[base.i[context.senderId].id].world.y}`, 518, 386);
		
		img.src = 'coin.png';
	    ctxs.drawImage(img, 4, 371)

	    ctxs.font = 'bold 20px canvas';
	    ctxs.fillStyle = "#ffffff";
	    ctxs.fillText(`${base.p[base.i[context.senderId].id].balance}`, 31, 392)

	    yplayers = await loadImage(base.p[base.i[context.senderId].id].photo_50)
		ctxs.drawImage(yplayers, 2, 2)

		img.src = `gui.png`;
		ctxs.drawImage(img, 0, 0)
		
		ctxs.font = '15px canvas';
	    ctx.fillStyle = "#ffffff";
		ctxs.textAlign = 'center';
		ctxs.fillText(`${base.p[base.i[context.senderId].id].lvl}`, 47, 54);

		base.p[base.i[context.senderId].id].caseopen = 0

		if(count === 0) return context.sendPhotos(canvass.toBuffer())
		if(count > 0) return context.sendPhotos({
			value: canvass.toBuffer()
		}, {
			message: `${text}`
		})
}})

updates.hear(/‚¨Ü‚¨Ü‚¨Ü/i, async (context) => {
	if(base.p[base.i[context.senderId].id].caseopen == 1) return
	base.p[base.i[context.senderId].id].caseopen = 1
	if(base.p[base.i[context.senderId].id].duel != 0){
		let proverka = Number(base.p[base.i[context.senderId].id].world.yd-60)
		base.p[base.i[context.senderId].id].caseopen = 0
		if(proverka < 12) return context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
		base.p[base.i[context.senderId].id].world.yd = Number(proverka)
		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(500, 300);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'duels.png';
		ctx.drawImage(img, 0, 0)
		let x = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.xd)
		let y = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.yd)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 0) img.src = 'guard.png';
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 1) img.src = 'guard1.png';
		ctx.drawImage(img, x, y)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].inventory.sword == 1){
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 0) {
			    	x = Number(x+25)
			    	y = Number(y+2)
			    	img.src = 'woodps.png';
			    }
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 1) {
					x = Number(x-7)
			    	y = Number(y+3)
			    	img.src = 'woodps1.png';
			    }
		}
		return context.sendPhotos(canvas.toBuffer())
	}
	if(base.p[base.i[context.senderId].id].worlds === 0){
	var yplayers = Number(base.p[base.i[context.senderId].id].world.y-60)
	if(yplayers < 390) {
		context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
	} else {
		base.p[base.i[context.senderId].id].world.y -= 60
	}



	var xplayers = Number(base.p[base.i[context.senderId].id].world.x)
	yplayers = Number(base.p[base.i[context.senderId].id].world.y)

	let text = `–†—è–¥–æ–º —Å –≤–∞–º–∏: `
		let count = 0

		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(2773, 2235);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'pole.png';
	    ctx.drawImage(img, 0, 0) // (-433, -459)-83
	    
	    if(near(xplayers, yplayers, 1300, 710) === true){
	    	count += 1
	    	text += `–õ–∞—É—Ä–∞ [–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å]`
	    }

	    for(let i in mobs.objects.tree){
		    if(nearhard(xplayers, yplayers, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy, 50, 65, -30, -25) == true) {
		    	if(count > 0) text += `, –¥–µ—Ä–µ–≤–æ`
		    	if(count == 0){
		    		count += 1
		    		text += `–¥–µ—Ä–µ–≤–æ`
		    	}
		    }
	    }

	    img.src = 'tree.png';

	    for(let i in mobs.objects.tree){
	    	if(mobs.objects.tree[i].dead === 0){
	    		ctx.drawImage(img, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy)
	    	}
	    }

	   for(let i in mobs.mob){
		    	if(mobs.mob[i].type === 1){
		    		if(mobs.mob[i].cent === 0){
		    			img.src = `${mobs.mob[i].pig}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
					if(mobs.mob[i].cent === 1){
		    			img.src = `${mobs.mob[i].pig1}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
		    		if(nearhard(xplayers, yplayers, mobs.mob[i].x, mobs.mob[i].y, 35, 35, -25, -35) == true){
			    		if(count > 0) text += `, —Å–≤–∏–Ω—å—è`
			    		if(count == 0){
			    			count += 1
			    			text += `—Å–≤–∏–Ω—å—è`
			    		}
		    		}
		    	}
	    	}

	    for(let i in base.p){
	    	if(base.p[i].online === 1){
	    	let x = base.p[i].world.x
	    	let y = base.p[i].world.y
	    	if(base.p[i].cent === 0) img.src = 'guard.png'
	    	if(base.p[i].cent === 1) img.src = 'guard1.png'
	    	ctx.drawImage(img, x, y)
	    	let xnick = base.p[i].world.x+17
	    	let ynick = base.p[i].world.y-5
	    	if(base.p[i].gun == 1){
		    	if(base.p[i].inventory.sword == 1){
			    	if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodps.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodps1.png';
			    	}
			    }
			}
			if(base.p[i].gun == 2){
				if(base.p[i].inventory.axe == 1){
					if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodas.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodas1.png';
			    	}
				}
			}
	    	ctx.drawImage(img, x, y)
	    	ctx.font = 'bold 13px sans';
	    	ctx.fillStyle = "#ffffff";
			ctx.textAlign = 'center';
			ctx.fillText(`${base.p[i].nick}`, xnick, ynick);
		}
	    }


	    	    	ctx.font = 'bold 15px canvas';
	    	ctx.fillStyle = "#ffec18";
			ctx.textAlign = 'center';
			ctx.fillText(`–õ–∞—É—Ä–∞`, 1297, 683);

	    var dataUrl = canvas.toDataURL();

	    img.src = `${dataUrl}`;

	    var canvass = createCanvas(700, 400);
		var ctxs = canvass.getContext('2d');

		xplayers = Math.floor(xplayers-330)
		xplayers = -xplayers

		yplayers = Math.floor(yplayers-178)
		yplayers = -yplayers

	    ctxs.drawImage(img, xplayers, yplayers)

		ctxs.font = '30px canvas';
	   	ctxs.fillStyle = "#751404";
		//ctx.textAlign = '';
		ctxs.fillText(`X: ${base.p[base.i[context.senderId].id].world.x}, Y: ${base.p[base.i[context.senderId].id].world.y}`, 518, 386);
		
		img.src = 'coin.png';
	    ctxs.drawImage(img, 4, 371)

	    ctxs.font = 'bold 20px canvas';
	    ctxs.fillStyle = "#ffffff";
	    ctxs.fillText(`${base.p[base.i[context.senderId].id].balance}`, 31, 392)

	    yplayers = await loadImage(base.p[base.i[context.senderId].id].photo_50)
		ctxs.drawImage(yplayers, 2, 2)

		img.src = `gui.png`;
		ctxs.drawImage(img, 0, 0)
		
		ctxs.font = '15px canvas';
	    ctx.fillStyle = "#ffffff";
		ctxs.textAlign = 'center';
		ctxs.fillText(`${base.p[base.i[context.senderId].id].lvl}`, 47, 54);

		base.p[base.i[context.senderId].id].caseopen = 0

		if(count === 0) return context.sendPhotos(canvass.toBuffer())
		if(count > 0) return context.sendPhotos({
			value: canvass.toBuffer()
		}, {
			message: `${text}`
		})}})

updates.hear(/‚¨Ü/i, async (context) => {
	if(base.p[base.i[context.senderId].id].caseopen == 1) return
	base.p[base.i[context.senderId].id].caseopen = 1
	if(base.p[base.i[context.senderId].id].duel != 0){
		let proverka = Number(base.p[base.i[context.senderId].id].world.yd-20)
		base.p[base.i[context.senderId].id].caseopen = 0
		if(proverka < 12) return context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
		base.p[base.i[context.senderId].id].world.yd = Number(proverka)
		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(500, 300);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'duels.png';
		ctx.drawImage(img, 0, 0)
		let x = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.xd)
		let y = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.yd)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 0) img.src = 'guard.png';
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 1) img.src = 'guard1.png';
		ctx.drawImage(img, x, y)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].inventory.sword == 1){
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 0) {
			    	x = Number(x+25)
			    	y = Number(y+2)
			    	img.src = 'woodps.png';
			    }
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 1) {
					x = Number(x-7)
			    	y = Number(y+3)
			    	img.src = 'woodps1.png';
			    }
		}
		return context.sendPhotos(canvas.toBuffer())
	}
	if(base.p[base.i[context.senderId].id].worlds === 0){
	var yplayers = Number(base.p[base.i[context.senderId].id].world.y-20)
	if(yplayers < 390) {
		context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
	} else {
		base.p[base.i[context.senderId].id].world.y -= 20
	}



	var xplayers = Number(base.p[base.i[context.senderId].id].world.x)
	yplayers = Number(base.p[base.i[context.senderId].id].world.y)

	let text = `–†—è–¥–æ–º —Å –≤–∞–º–∏: `
		let count = 0

		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(2773, 2235);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'pole.png';
	    ctx.drawImage(img, 0, 0) // (-433, -459)-83
	    
	    if(near(xplayers, yplayers, 1300, 710) === true){
	    	count += 1
	    	text += `–õ–∞—É—Ä–∞ [–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å]`
	    }

	    for(let i in mobs.objects.tree){
		    if(nearhard(xplayers, yplayers, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy, 50, 65, -30, -25) == true) {
		    	if(count > 0) text += `, –¥–µ—Ä–µ–≤–æ`
		    	if(count == 0){
		    		count += 1
		    		text += `–¥–µ—Ä–µ–≤–æ`
		    	}
		    }
	    }

	    img.src = 'tree.png';

	    for(let i in mobs.objects.tree){
	    	if(mobs.objects.tree[i].dead === 0){
	    		ctx.drawImage(img, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy)
	    	}
	    }

	    for(let i in mobs.mob){
		    	if(mobs.mob[i].type === 1){
		    		if(mobs.mob[i].cent === 0){
		    			img.src = `${mobs.mob[i].pig}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
					if(mobs.mob[i].cent === 1){
		    			img.src = `${mobs.mob[i].pig1}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
		    		if(nearhard(xplayers, yplayers, mobs.mob[i].x, mobs.mob[i].y, 35, 35, -25, -35) == true){
			    		if(count > 0) text += `, —Å–≤–∏–Ω—å—è`
			    		if(count == 0){
			    			count += 1
			    			text += `—Å–≤–∏–Ω—å—è`
			    		}
		    		}
		    	}
	    	}

	    for(let i in base.p){
	    	if(base.p[i].online === 1){
	    	let x = base.p[i].world.x
	    	let y = base.p[i].world.y
	    	if(base.p[i].cent === 0) img.src = 'guard.png'
	    	if(base.p[i].cent === 1) img.src = 'guard1.png'
	    	ctx.drawImage(img, x, y)
	    	let xnick = base.p[i].world.x+17
	    	let ynick = base.p[i].world.y-5
	    	if(base.p[i].gun == 1){
		    	if(base.p[i].inventory.sword == 1){
			    	if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodps.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodps1.png';
			    	}
			    }
			}
			if(base.p[i].gun == 2){
				if(base.p[i].inventory.axe == 1){
					if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodas.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodas1.png';
			    	}
				}
			}
	    	ctx.drawImage(img, x, y)
	    	ctx.font = 'bold 13px sans';
	    	ctx.fillStyle = "#ffffff";
			ctx.textAlign = 'center';
			ctx.fillText(`${base.p[i].nick}`, xnick, ynick);
		}
	    }


	    	    	ctx.font = 'bold 15px canvas';
	    	ctx.fillStyle = "#ffec18";
			ctx.textAlign = 'center';
			ctx.fillText(`–õ–∞—É—Ä–∞`, 1297, 683);

	    var dataUrl = canvas.toDataURL();

	    img.src = `${dataUrl}`;

	    var canvass = createCanvas(700, 400);
		var ctxs = canvass.getContext('2d');

		xplayers = Math.floor(xplayers-330)
		xplayers = -xplayers

		yplayers = Math.floor(yplayers-178)
		yplayers = -yplayers

	    ctxs.drawImage(img, xplayers, yplayers)

		ctxs.font = '30px canvas';
	   	ctxs.fillStyle = "#751404";
		//ctx.textAlign = '';
		ctxs.fillText(`X: ${base.p[base.i[context.senderId].id].world.x}, Y: ${base.p[base.i[context.senderId].id].world.y}`, 518, 386);
		
		img.src = 'coin.png';
	    ctxs.drawImage(img, 4, 371)

	    ctxs.font = 'bold 20px canvas';
	    ctxs.fillStyle = "#ffffff";
	    ctxs.fillText(`${base.p[base.i[context.senderId].id].balance}`, 31, 392)

	    yplayers = await loadImage(base.p[base.i[context.senderId].id].photo_50)
		ctxs.drawImage(yplayers, 2, 2)

		img.src = `gui.png`;
		ctxs.drawImage(img, 0, 0)
		
		ctxs.font = '15px canvas';
	    ctx.fillStyle = "#ffffff";
		ctxs.textAlign = 'center';
		ctxs.fillText(`${base.p[base.i[context.senderId].id].lvl}`, 47, 54);

		base.p[base.i[context.senderId].id].caseopen = 0

		if(count === 0) return context.sendPhotos(canvass.toBuffer())
		if(count > 0) return context.sendPhotos({
			value: canvass.toBuffer()
		}, {
			message: `${text}`
		})}})

updates.hear(/‚û°‚û°‚û°/i, async (context) => {
	if(base.p[base.i[context.senderId].id].caseopen == 1) return
	base.p[base.i[context.senderId].id].caseopen = 1
	if(base.p[base.i[context.senderId].id].duel != 0){
		let proverka = Number(base.p[base.i[context.senderId].id].world.xd+60)
		base.p[base.i[context.senderId].id].caseopen = 0
		if(proverka > 490) return context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
		base.p[base.i[context.senderId].id].cent = 0
		base.p[base.i[context.senderId].id].world.xd = Number(proverka)
		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(500, 300);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'duels.png';
		ctx.drawImage(img, 0, 0)
		let x = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.xd)
		let y = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.yd)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 0) img.src = 'guard.png';
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 1) img.src = 'guard1.png';
		ctx.drawImage(img, x, y)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].inventory.sword == 1){
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 0) {
			    	x = Number(x+25)
			    	y = Number(y+2)
			    	img.src = 'woodps.png';
			    }
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 1) {
					x = Number(x-7)
			    	y = Number(y+3)
			    	img.src = 'woodps1.png';
			    }
		}
		return context.sendPhotos(canvas.toBuffer())
	}
	if(base.p[base.i[context.senderId].id].worlds === 0){

	var xplayers = Number(base.p[base.i[context.senderId].id].world.x+60)
	if(xplayers > 2035) {
		context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
	} else {
		base.p[base.i[context.senderId].id].world.x += 60
	}

	var yplayers = Number(base.p[base.i[context.senderId].id].world.y)

	base.p[base.i[context.senderId].id].cent = 0



	xplayers = Number(base.p[base.i[context.senderId].id].world.x)
	yplayers = Number(base.p[base.i[context.senderId].id].world.y)

	let text = `–†—è–¥–æ–º —Å –≤–∞–º–∏: `
		let count = 0

		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(2773, 2235);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'pole.png';
	    ctx.drawImage(img, 0, 0) // (-433, -459)-83

	    if(near(xplayers, yplayers, 1300, 710) === true){
	    	count += 1
	    	text += `–õ–∞—É—Ä–∞ [–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å]`
	    }
	    
	    for(let i in mobs.objects.tree){
		    if(nearhard(xplayers, yplayers, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy, 50, 65, -30, -25) == true) {
		    	if(count > 0) text += `, –¥–µ—Ä–µ–≤–æ`
		    	if(count == 0){
		    		count += 1
		    		text += `–¥–µ—Ä–µ–≤–æ`
		    	}
		    }
	    }

	    img.src = 'tree.png';

	    for(let i in mobs.objects.tree){
	    	if(mobs.objects.tree[i].dead === 0){
	    		ctx.drawImage(img, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy)
	    	}
	    }

	    for(let i in mobs.mob){
		    	if(mobs.mob[i].type === 1){
		    		if(mobs.mob[i].cent === 0){
		    			img.src = `${mobs.mob[i].pig}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
					if(mobs.mob[i].cent === 1){
		    			img.src = `${mobs.mob[i].pig1}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
		    		if(nearhard(xplayers, yplayers, mobs.mob[i].x, mobs.mob[i].y, 35, 35, -25, -35) == true){
			    		if(count > 0) text += `, —Å–≤–∏–Ω—å—è`
			    		if(count == 0){
			    			count += 1
			    			text += `—Å–≤–∏–Ω—å—è`
			    		}
		    		}
		    	}
	    	}

	    for(let i in base.p){
	    	if(base.p[i].online === 1){
	    	let x = base.p[i].world.x
	    	let y = base.p[i].world.y
	    	if(base.p[i].cent === 0) img.src = 'guard.png'
	    	if(base.p[i].cent === 1) img.src = 'guard1.png'
	    	ctx.drawImage(img, x, y)
	    	let xnick = base.p[i].world.x+17
	    	let ynick = base.p[i].world.y-5
	    	if(base.p[i].gun == 1){
		    	if(base.p[i].inventory.sword == 1){
			    	if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodps.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodps1.png';
			    	}
			    }
			}
			if(base.p[i].gun == 2){
				if(base.p[i].inventory.axe == 1){
					if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodas.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodas1.png';
			    	}
				}
			}
	    	ctx.drawImage(img, x, y)
	    	ctx.font = 'bold 13px sans';
	    	ctx.fillStyle = "#ffffff";
			ctx.textAlign = 'center';
			ctx.fillText(`${base.p[i].nick}`, xnick, ynick);
		}
	    }


	    	    	ctx.font = 'bold 15px canvas';
	    	ctx.fillStyle = "#ffec18";
			ctx.textAlign = 'center';
			ctx.fillText(`–õ–∞—É—Ä–∞`, 1297, 683);

	    var dataUrl = canvas.toDataURL();

	    img.src = `${dataUrl}`;

	    var canvass = createCanvas(700, 400);
		var ctxs = canvass.getContext('2d');

		xplayers = Math.floor(xplayers-330)
		xplayers = -xplayers

		yplayers = Math.floor(yplayers-178)
		yplayers = -yplayers

	    ctxs.drawImage(img, xplayers, yplayers)

		ctxs.font = '30px canvas';
	   	ctxs.fillStyle = "#751404";
		//ctx.textAlign = '';
		ctxs.fillText(`X: ${base.p[base.i[context.senderId].id].world.x}, Y: ${base.p[base.i[context.senderId].id].world.y}`, 518, 386);
		

		img.src = 'coin.png';
	    ctxs.drawImage(img, 4, 371)

	    ctxs.font = 'bold 20px canvas';
	    ctxs.fillStyle = "#ffffff";
	    ctxs.fillText(`${base.p[base.i[context.senderId].id].balance}`, 31, 392)

	    yplayers = await loadImage(base.p[base.i[context.senderId].id].photo_50)
		ctxs.drawImage(yplayers, 2, 2)

		img.src = `gui.png`;
		ctxs.drawImage(img, 0, 0)
		
		ctxs.font = '15px canvas';
	    ctx.fillStyle = "#ffffff";
		ctxs.textAlign = 'center';
		ctxs.fillText(`${base.p[base.i[context.senderId].id].lvl}`, 47, 54);

		base.p[base.i[context.senderId].id].caseopen = 0

		if(count === 0) return context.sendPhotos(canvass.toBuffer())
		if(count > 0) return context.sendPhotos({
			value: canvass.toBuffer()
		}, {
			message: `${text}`
		})}
})

updates.hear(/‚û°/i, async (context) => {
	if(base.p[base.i[context.senderId].id].caseopen == 1) return
	base.p[base.i[context.senderId].id].caseopen = 1
	if(base.p[base.i[context.senderId].id].duel != 0){
		let proverka = Number(base.p[base.i[context.senderId].id].world.xd+20)
		base.p[base.i[context.senderId].id].caseopen = 0
		if(proverka > 490) return context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
		base.p[base.i[context.senderId].id].cent = 0
		base.p[base.i[context.senderId].id].world.xd = Number(proverka)
		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(500, 300);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'duels.png';
		ctx.drawImage(img, 0, 0)
		let x = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.xd)
		let y = Number(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].world.yd)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 0) img.src = 'guard.png';
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent == 1) img.src = 'guard1.png';
		ctx.drawImage(img, x, y)
		if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].inventory.sword == 1){
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 0) {
			    	x = Number(x+25)
			    	y = Number(y+2)
			    	img.src = 'woodps.png';
			    }
			    if(base.p[duel.d[base.p[base.i[context.senderId].id].duel].player].cent === 1) {
					x = Number(x-7)
			    	y = Number(y+3)
			    	img.src = 'woodps1.png';
			    }
		}
		return context.sendPhotos(canvas.toBuffer())
	}
	if(base.p[base.i[context.senderId].id].worlds === 0){

	var xplayers = Number(base.p[base.i[context.senderId].id].world.x+20)
	if(xplayers > 2035) {
		context.send(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–π—Ç–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç—ã!`)
	} else {
		base.p[base.i[context.senderId].id].world.x += 20
	}

	var yplayers = Number(base.p[base.i[context.senderId].id].world.y+20)

	base.p[base.i[context.senderId].id].cent = 0



	xplayers = Number(base.p[base.i[context.senderId].id].world.x)
	yplayers = Number(base.p[base.i[context.senderId].id].world.y)

	let text = `–†—è–¥–æ–º —Å –≤–∞–º–∏: `
		let count = 0

		const { registerFont, createCanvas, loadImage } = require('canvas');
		registerFont('canvas.ttf', { family: 'canvas' })
		var canvas = createCanvas(2773, 2235);
		var ctx = canvas.getContext('2d');
		var Image = Canvas.Image;
		var img = new Image();
		img.src = 'pole.png';
	    ctx.drawImage(img, 0, 0) // (-433, -459)-83
	    
		if(near(xplayers, yplayers, 1300, 710) === true){
	    	count += 1
	    	text += `–õ–∞—É—Ä–∞ [–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å]`
	    }

	    for(let i in mobs.objects.tree){
		    if(nearhard(xplayers, yplayers, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy, 50, 65, -30, -25) == true) {
		    	if(count > 0) text += `, –¥–µ—Ä–µ–≤–æ`
		    	if(count == 0){
		    		count += 1
		    		text += `–¥–µ—Ä–µ–≤–æ`
		    	}
		    }
	    }

	    img.src = 'tree.png';

	    for(let i in mobs.objects.tree){
	    	if(mobs.objects.tree[i].dead === 0){
	    		ctx.drawImage(img, mobs.objects.tree[i].coordsx, mobs.objects.tree[i].coordsy)
	    	}
	    }

	    for(let i in mobs.mob){
		    	if(mobs.mob[i].type === 1){
		    		if(mobs.mob[i].cent === 0){
		    			img.src = `${mobs.mob[i].pig}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
					if(mobs.mob[i].cent === 1){
		    			img.src = `${mobs.mob[i].pig1}`
		    			ctx.drawImage(img, mobs.mob[i].x, mobs.mob[i].y)
		    		}
		    		if(nearhard(xplayers, yplayers, mobs.mob[i].x, mobs.mob[i].y, 35, 35, -25, -35) == true){
			    		if(count > 0) text += `, —Å–≤–∏–Ω—å—è`
			    		if(count == 0){
			    			count += 1
			    			text += `—Å–≤–∏–Ω—å—è`
			    		}
		    		}
		    	}
	    	}

	    for(let i in base.p){
	    	if(base.p[i].online === 1){
	    	let x = base.p[i].world.x
	    	let y = base.p[i].world.y
	    	if(base.p[i].cent === 0) img.src = 'guard.png'
	    	if(base.p[i].cent === 1) img.src = 'guard1.png'
	    	ctx.drawImage(img, x, y)
	    	let xnick = base.p[i].world.x+17
	    	let ynick = base.p[i].world.y-5
	    	if(base.p[i].gun == 1){
		    	if(base.p[i].inventory.sword == 1){
			    	if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodps.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodps1.png';
			    	}
			    }
			}
			if(base.p[i].gun == 2){
				if(base.p[i].inventory.axe == 1){
					if(base.p[i].cent === 0) {
			    		x = Number(x+25)
			    		y = Number(y+2)
			    		img.src = 'woodas.png';
			    	}
			    	if(base.p[i].cent === 1) {
						x = Number(x-7)
			    		y = Number(y+3)
			    		img.src = 'woodas1.png';
			    	}
				}
			}
	    	ctx.drawImage(img, x, y)
	    	ctx.font = 'bold 13px sans';
	    	ctx.fillStyle = "#ffffff";
			ctx.textAlign = 'center';
			ctx.fillText(`${base.p[i].nick}`, xnick, ynick);
		}
	    }


	    	    	ctx.font = 'bold 15px canvas';
	    	ctx.fillStyle = "#ffec18";
			ctx.textAlign = 'center';
			ctx.fillText(`–õ–∞—É—Ä–∞`, 1297, 683);

	    var dataUrl = canvas.toDataURL();

	    img.src = `${dataUrl}`;

	    var canvass = createCanvas(700, 400);
		var ctxs = canvass.getContext('2d');

		xplayers = Math.floor(xplayers-330)
		xplayers = -xplayers

		yplayers = Math.floor(yplayers-178)
		yplayers = -yplayers

	    ctxs.drawImage(img, xplayers, yplayers)

		ctxs.font = '30px canvas';
	   	ctxs.fillStyle = "#751404";
		//ctx.textAlign = '';
		ctxs.fillText(`X: ${base.p[base.i[context.senderId].id].world.x}, Y: ${base.p[base.i[context.senderId].id].world.y}`, 518, 386);
		
		img.src = 'coin.png';
	    ctxs.drawImage(img, 4, 371)

	    ctxs.font = 'bold 20px canvas';
	    ctxs.fillStyle = "#ffffff";
	    ctxs.fillText(`${base.p[base.i[context.senderId].id].balance}`, 31, 392)

	    yplayers = await loadImage(base.p[base.i[context.senderId].id].photo_50)
		ctxs.drawImage(yplayers, 2, 2)

		img.src = `gui.png`;
		ctxs.drawImage(img, 0, 0)
		
		ctxs.font = '15px canvas';
	    ctx.fillStyle = "#ffffff";
		ctxs.textAlign = 'center';
		ctxs.fillText(`${base.p[base.i[context.senderId].id].lvl}`, 47, 54);


		base.p[base.i[context.senderId].id].caseopen = 0

		if(count === 0) return context.sendPhotos(canvass.toBuffer())
		if(count > 0) return context.sendPhotos({
			value: canvass.toBuffer()
		}, {
			message: `${text}`
		})}
})

updates.hear(/eval/i, async (context) => {
	if(base.p[base.i[context.senderId].id].rank < 10) return
	let text = `${context.text}`
	text = text.replace(`eval `, ``)
	await eval(text)
})



/*vk.updates.hear(/–∫–µ–π—Å—ã 1/i, async (context) => {
	if(base.p[base.i[context.senderId].id].caseopen === 1) return
	const { createCanvas, loadImage } = require('canvas');
	const canvas = createCanvas(1920, 1040);
	const ctx = canvas.getContext('2d');
	const Image = Canvas.Image;
	const img = new Image();
	let random = [rand([`vip.png`, `exp.png`, `exp.png`, `banan.png`, `banan.png`, `banan.png`]), rand([`vip.png`, `exp.png`, `exp.png`, `banan.png`, `banan.png`, `banan.png`]), rand([`vip.png`, `exp.png`, `exp.png`, `banan.png`, `banan.png`, `banan.png`]), rand([`vip.png`, `exp.png`, `exp.png`, `exp.png`, `banan.png`, `banan.png`, `banan.png`, `banan.png`]), rand([`vip.png`, `exp.png`, `exp.png`, `banan.png`, `banan.png`, `banan.png`]), rand([`vip.png`, `exp.png`, `exp.png`, `banan.png`, `banan.png`, `banan.png`]), rand([`vip.png`, `exp.png`, `exp.png`, `banan.png`, `banan.png`, `banan.png`]), rand([`vip.png`, `exp.png`, `exp.png`, `banan.png`, `banan.png`, `banan.png`])]
	let random1 = getRandomInRange(5,5)
	img.src = 'case.png';
	ctx.drawImage(img, 0, 0);
	base.p[base.i[context.senderId].id].caseopen = 1
	if(random1 === 5){
		context.send(`>> –æ—Ç–∫—Ä—ã–≤–∞—é –∫–µ–π—Å`).then(res => {
			var idmessage = res
				let imgs = new Image()
				imgs.src = `${random[0]}` // 1 –º–∞—Å—Å–∏–≤
				ctx.drawImage(imgs, 1263, 324) // 1 –º–∞—Å—Å–∏–≤
				upload.messagePhoto({
					peer_id: context.senderId,
					source: canvas.toBuffer()
				}).then(id => {
					vk.api.messages.edit({
						peer_id: context.senderId,
						message_id: res,
						attachment: `photo${id.ownerId}_${id.id}_${id.accesKey}`
					})
				})
				setTimeout(() => {
					let img = new Image();
					img.src = 'case.png';
					ctx.drawImage(img, 0, 0);

					let imgs = new Image()
					imgs.src = `${random[0]}` // 1 –º–∞—Å—Å–∏–≤
					ctx.drawImage(imgs, 745, 324) // 239 324

					let imgt = new Image()
					imgt.src = `${random[1]}` // 2 –º–∞—Å—Å–∏–≤
					ctx.drawImage(imgt, 1263, 324)

					upload.messagePhoto({
						peer_id: context.senderId,
						source: canvas.toBuffer()
					}).then(id => {
						vk.api.messages.edit({
							peer_id: context.senderId,
							message_id: res,
							attachment: `photo${id.ownerId}_${id.id}_${id.accesKey}`
						})
					})
					setTimeout(() => {
						let img = new Image();
						img.src = 'case.png';
						ctx.drawImage(img, 0, 0);

						let imgs = new Image()
						imgs.src = `${random[0]}` // 1 –º–∞—Å—Å–∏–≤
						ctx.drawImage(imgs, 239, 324)

						let imgt = new Image()
						imgt.src = `${random[1]}` // 2 –º–∞—Å—Å–∏–≤
						ctx.drawImage(imgt, 745, 324)

						let imgp = new Image()
						imgp.src = `${random[2]}` // 3 –º–∞—Å—Å–∏–≤
						ctx.drawImage(imgp, 1263, 324)

						upload.messagePhoto({
							peer_id: context.senderId,
							source: canvas.toBuffer()
						}).then(id => {
							vk.api.messages.edit({
								peer_id: context.senderId,
								message_id: res,
								attachment: `photo${id.ownerId}_${id.id}_${id.accesKey}`
							})
						})

						setTimeout(() => {
							let img = new Image();
							img.src = 'case.png';
							ctx.drawImage(img, 0, 0);

							let imgs = new Image()
							imgs.src = `${random[1]}` // 2 –º–∞—Å—Å–∏–≤
							ctx.drawImage(imgs, 239, 324)

							let imgt = new Image()
							imgt.src = `${random[2]}` // 3 –º–∞—Å—Å–∏–≤
							ctx.drawImage(imgt, 745, 324)

							let imgp = new Image()
							imgp.src = `${random[3]}` // 4 –º–∞—Å—Å–∏–≤
							ctx.drawImage(imgp, 1263, 324)
							upload.messagePhoto({
								peer_id: context.senderId,
								source: canvas.toBuffer()
							}).then(id => {
								vk.api.messages.edit({
									peer_id: context.senderId,
									message_id: res,
									attachment: `photo${id.ownerId}_${id.id}_${id.accesKey}`
								})
							})
							setTimeout(() => {
								let img = new Image();
								img.src = 'case.png';
								ctx.drawImage(img, 0, 0);

								let imgs = new Image()
								imgs.src = `${random[2]}` // 3 –º–∞—Å—Å–∏–≤
								ctx.drawImage(imgs, 239, 324)

								let imgt = new Image()
								imgt.src = `${random[3]}` // 4 –º–∞—Å—Å–∏–≤
								ctx.drawImage(imgt, 745, 324)

								let imgp = new Image()
								imgp.src = `${random[4]}` // 5 –º–∞—Å—Å–∏–≤
								ctx.drawImage(imgp, 1263, 324)

								upload.messagePhoto({
									peer_id: context.senderId,
									source: canvas.toBuffer()
								}).then(id => {
									vk.api.messages.edit({
										peer_id: context.senderId,
										message_id: res,
										attachment: `photo${id.ownerId}_${id.id}_${id.accesKey}`
									})
								})
								setTimeout(() => {
									//[`vip.png`, `money.png`, `exp.png`]
									base.p[base.i[context.senderId].id].caseopen = 0
									if(random[3] == `vip.png`) {
										return context.send(`–í–∞–º –≤—ã–ø–∞–ª –≤–∏–ø –í–´ –õ–û–• :)`)
									}
									if(random[3] == `banan.png`) {
										return context.send(`–í–∞–º –≤—ã–ø–∞–ª–æ: ${getRandomInRange(1, 10000)} –±–∞–Ω–∞–Ω–æ–≤`)
									}
									if(random[3] == `exp.png`) {
										return context.send(`–í–∞–º –≤—ã–ø–∞–ª–æ: ${getRandomInRange(1,50)} –æ–ø—ã—Ç–∞`)
									}
								}, 2000)
							}, 2000)
						}, 2000)
					}, 2000)
				}, 2000)
		})
	}
})



	updates.hear(/–¥–∞—Ç–∞/i, async (context) => {
	let datas = await request(`https://apidog.ru/api/v2/apidog.getUserDateRegistration?userDomain=${context.senderId}`); 
	var xpp = JSON.parse(datas)
	let datass = `${xpp.response.date}`
	console.log(datass)
	if(datass.includes(`—è–Ω–≤–∞—Ä—è`)) datass = datass.replace(` —è–Ω–≤–∞—Ä—è `, `.01.`)
	if(datass.includes(`—Ñ–µ–≤—Ä–∞–ª—è`)) datass = datass.replace(` —Ñ–µ–≤—Ä–∞–ª—è `, `.02.`)
	if(datass.includes(`–º–∞—Ä—Ç–∞`)) datass = datass.replace(` –º–∞—Ä—Ç–∞ `, `.03.`)
	if(datass.includes(`–∞–ø—Ä–µ–ª—è`)) datass = datass.replace(` –∞–ø—Ä–µ–ª—è `, `.04.`)
	if(datass.includes(`–º–∞—è`)) datass = datass.replace(` –º–∞—è `, `.05.`)
	if(datass.includes(`–∏—é–Ω—è`)) datass = datass.replace(` –∏—é–Ω—è `, `.06.`)
	if(datass.includes(`–∏—é–ª—è`)) datass = datass.replace(` –∏—é–ª—è `, `.07.`)
	if(datass.includes(`–∞–≤–≥—É—Å—Ç–∞`)) datass = datass.replace(` –∞–≤–≥—É—Å—Ç–∞ `, `.08.`)
	if(datass.includes(`—Å–µ–Ω—Ç—è–±—Ä—è`)) datass = datass.replace(` —Å–µ–Ω—Ç—è–±—Ä—è `, `.09.`)
	if(datass.includes(`–æ–∫—Ç—è–±—Ä—è`)) datass = datass.replace(` –æ–∫—Ç—è–±—Ä—è `, `.10.`)
	if(datass.includes(`–Ω–æ—è–±—Ä—è`)) datass = datass.replace(` –Ω–æ—è–±—Ä—è `, `.11.`)
	if(datass.includes(`–¥–µ–∫–∞–±—Ä—è`)) datass = datass.replace(` –¥–µ–∫–∞–±—Ä—è `, `.12.`)
	console.log(datass)
	let datamass = splitString(datass, '.')
	console.log(datamass)
	let prov = `${datamass[2]}.${datamass[1]}.${datamass[0]} ${xpp.response.time}`
	console.log(prov)
})*/

/*			ctx.font = '30px Roboto';
			ctx.fillStyle = "#F4ECD2";
			ctx.fillText(`${user_info.first_name}`, 216, 310);*/



/*			const mychit = await loadImage(ava_info.photo_200);
			ctx.drawImage(mychit, 215, 60);*/

async function run() {
    await vk.updates.startPolling();
    for(let i in base.p){
    	base.p[i].caseopen = 0
    }
    for(let j in mobs.mob){
    	delete mobs.mob[j]
    }
    base.c.pig = 0
    console.log(chalk.red(">_ Started"));
} 
 
run().catch(console.error);
// –ü–æ–ª—É—á–∞–µ–º UnixDate –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
function getUnix() {
    return Math.floor(Date.now() / 1000);
}